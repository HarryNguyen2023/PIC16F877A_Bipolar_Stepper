

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jun 17 22:34:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     0091                     	;# 
   173     0092                     	;# 
   174     0093                     	;# 
   175     0094                     	;# 
   176     0098                     	;# 
   177     0099                     	;# 
   178     009C                     	;# 
   179     009D                     	;# 
   180     009E                     	;# 
   181     009F                     	;# 
   182     010C                     	;# 
   183     010D                     	;# 
   184     010E                     	;# 
   185     010F                     	;# 
   186     018C                     	;# 
   187     018D                     	;# 
   188     0000                     	;# 
   189     0001                     	;# 
   190     0002                     	;# 
   191     0003                     	;# 
   192     0004                     	;# 
   193     0005                     	;# 
   194     0006                     	;# 
   195     0007                     	;# 
   196     0008                     	;# 
   197     0009                     	;# 
   198     000A                     	;# 
   199     000B                     	;# 
   200     000C                     	;# 
   201     000D                     	;# 
   202     000E                     	;# 
   203     000E                     	;# 
   204     000F                     	;# 
   205     0010                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0013                     	;# 
   209     0014                     	;# 
   210     0015                     	;# 
   211     0015                     	;# 
   212     0016                     	;# 
   213     0017                     	;# 
   214     0018                     	;# 
   215     0019                     	;# 
   216     001A                     	;# 
   217     001B                     	;# 
   218     001B                     	;# 
   219     001C                     	;# 
   220     001D                     	;# 
   221     001E                     	;# 
   222     001F                     	;# 
   223     0081                     	;# 
   224     0085                     	;# 
   225     0086                     	;# 
   226     0087                     	;# 
   227     0088                     	;# 
   228     0089                     	;# 
   229     008C                     	;# 
   230     008D                     	;# 
   231     008E                     	;# 
   232     0091                     	;# 
   233     0092                     	;# 
   234     0093                     	;# 
   235     0094                     	;# 
   236     0098                     	;# 
   237     0099                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     010C                     	;# 
   243     010D                     	;# 
   244     010E                     	;# 
   245     010F                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248     0019                     _TXREG	set	25
   249     001A                     _RCREG	set	26
   250     0064                     _TXIF	set	100
   251     00C6                     _RX9	set	198
   252     005E                     _PEIE	set	94
   253     00C7                     _SPEN	set	199
   254     00C4                     _CREN	set	196
   255     00C1                     _OERR	set	193
   256     0065                     _RCIF	set	101
   257     0041                     _RD1	set	65
   258     0030                     _RB0	set	48
   259     0040                     _RD0	set	64
   260     0042                     _RD2	set	66
   261     005F                     _GIE	set	95
   262     005C                     _INTE	set	92
   263     0059                     _INTF	set	89
   264     0099                     _SPBRG	set	153
   265     0087                     _TRISCbits	set	135
   266     04C6                     _TX9	set	1222
   267     04C5                     _TXEN	set	1221
   268     0465                     _RCIE	set	1125
   269     04C4                     _SYNC	set	1220
   270     04C2                     _BRGH	set	1218
   271     0442                     _TRISD2	set	1090
   272     0441                     _TRISD1	set	1089
   273     0440                     _TRISD0	set	1088
   274     040E                     _INTEDG	set	1038
   275     0430                     _TRISB0	set	1072
   276                           
   277                           	psect	strings
   278     0600                     __pstrings:
   279     0600                     stringtab:
   280     0600                     __stringtab:
   281                           
   282                           ;	String table - string pointers are 1 byte each
   283     0600  1BFF               	btfsc	btemp+1,7
   284     0601  2E0A               	ljmp	stringcode
   285     0602  1383               	bcf	3,7
   286     0603  187F               	btfsc	btemp+1,0
   287     0604  1783               	bsf	3,7
   288     0605  0800               	movf	0,w
   289     0606  0A84               	incf	4,f
   290     0607  1903               	skipnz
   291     0608  0AFF               	incf	btemp+1,f
   292     0609  0008               	return
   293     060A                     stringcode:
   294     060A                     stringdir:
   295     060A  3006               	movlw	high stringdir
   296     060B  008A               	movwf	10
   297     060C  0804               	movf	4,w
   298     060D  0A84               	incf	4,f
   299     060E  0782               	addwf	2,f
   300     060F                     __stringbase:
   301     060F  3400               	retlw	0
   302     0610                     __end_of__stringtab:
   303     0610                     STR_1:
   304     0610  3449               	retlw	73	;'I'
   305     0611  346E               	retlw	110	;'n'
   306     0612  3476               	retlw	118	;'v'
   307     0613  3461               	retlw	97	;'a'
   308     0614  346C               	retlw	108	;'l'
   309     0615  3469               	retlw	105	;'i'
   310     0616  3464               	retlw	100	;'d'
   311     0617  3420               	retlw	32	;' '
   312     0618  3463               	retlw	99	;'c'
   313     0619  346F               	retlw	111	;'o'
   314     061A  346D               	retlw	109	;'m'
   315     061B  346D               	retlw	109	;'m'
   316     061C  3461               	retlw	97	;'a'
   317     061D  346E               	retlw	110	;'n'
   318     061E  3464               	retlw	100	;'d'
   319     061F  340D               	retlw	13
   320     0620  340A               	retlw	10
   321     0621  3400               	retlw	0
   322     0622                     STR_4:
   323     0622  3453               	retlw	83	;'S'
   324     0623  3479               	retlw	121	;'y'
   325     0624  3473               	retlw	115	;'s'
   326     0625  3474               	retlw	116	;'t'
   327     0626  3465               	retlw	101	;'e'
   328     0627  346D               	retlw	109	;'m'
   329     0628  3420               	retlw	32	;' '
   330     0629  3469               	retlw	105	;'i'
   331     062A  3473               	retlw	115	;'s'
   332     062B  3420               	retlw	32	;' '
   333     062C  3472               	retlw	114	;'r'
   334     062D  3465               	retlw	101	;'e'
   335     062E  3461               	retlw	97	;'a'
   336     062F  3464               	retlw	100	;'d'
   337     0630  3479               	retlw	121	;'y'
   338     0631  340D               	retlw	13
   339     0632  340A               	retlw	10
   340     0633  3400               	retlw	0
   341     0634                     STR_3:
   342     0634  3452               	retlw	82	;'R'
   343     0635  3465               	retlw	101	;'e'
   344     0636  3463               	retlw	99	;'c'
   345     0637  3465               	retlw	101	;'e'
   346     0638  3469               	retlw	105	;'i'
   347     0639  3476               	retlw	118	;'v'
   348     063A  3465               	retlw	101	;'e'
   349     063B  3464               	retlw	100	;'d'
   350     063C  343A               	retlw	58	;':'
   351     063D  3420               	retlw	32	;' '
   352     063E  3425               	retlw	37	;'%'
   353     063F  3463               	retlw	99	;'c'
   354     0640  340D               	retlw	13
   355     0641  340A               	retlw	10
   356     0642  3400               	retlw	0
   357     0643                     STR_2:
   358     0643  3443               	retlw	67	;'C'
   359     0644  346F               	retlw	111	;'o'
   360     0645  346D               	retlw	109	;'m'
   361     0646  3470               	retlw	112	;'p'
   362     0647  346C               	retlw	108	;'l'
   363     0648  3465               	retlw	101	;'e'
   364     0649  3474               	retlw	116	;'t'
   365     064A  3465               	retlw	101	;'e'
   366     064B  3464               	retlw	100	;'d'
   367     064C  340D               	retlw	13
   368     064D  340A               	retlw	10
   369     064E  3400               	retlw	0
   370                           
   371                           	psect	cinit
   372     0015                     start_initialization:	
   373                           ; #config settings
   374                           
   375     0015                     __initialization:
   376                           
   377                           ; Clear objects allocated to BANK0
   378     0015  1283               	bcf	3,5	;RP0=0, select bank0
   379     0016  1303               	bcf	3,6	;RP1=0, select bank0
   380     0017  01EA               	clrf	__pbssBANK0& (0+127)
   381                           
   382                           ; Clear objects allocated to BANK1
   383     0018  1383               	bcf	3,7	;select IRP bank0
   384     0019  30A0               	movlw	low __pbssBANK1
   385     001A  0084               	movwf	4
   386     001B  30B3               	movlw	low (__pbssBANK1+19)
   387     001C  120A  118A  27C6   	fcall	clear_ram0
   388     001F                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391     001F                     __end_of__initialization:
   392     001F  0183               	clrf	3
   393     0020  120A  118A  2EDD   	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssBANK0
   396     006A                     __pbssBANK0:
   397     006A                     _command:
   398     006A                     	ds	1
   399                           
   400                           	psect	bssBANK1
   401     00A0                     __pbssBANK1:
   402     00A0                     _mode:
   403     00A0                     	ds	1
   404     00A1                     _speedmode:
   405     00A1                     	ds	1
   406     00A2                     _rcvStr:
   407     00A2                     	ds	17
   408                           
   409                           	psect	clrtext
   410     07C6                     clear_ram0:	
   411                           ;	Called with FSR containing the base address, and
   412                           ;	W with the last address+1
   413                           
   414     07C6  0064               	clrwdt	;clear the watchdog before getting into this loop
   415     07C7                     clrloop0:
   416     07C7  0180               	clrf	0	;clear RAM location pointed to by FSR
   417     07C8  0A84               	incf	4,f	;increment pointer
   418     07C9  0604               	xorwf	4,w	;XOR with final address
   419     07CA  1903               	btfsc	3,2	;have we reached the end yet?
   420     07CB  3400               	retlw	0	;all done for this memory range, return
   421     07CC  0604               	xorwf	4,w	;XOR again to restore value
   422     07CD  2FC7               	goto	clrloop0	;do the next byte
   423                           
   424                           	psect	cstackBANK1
   425     00B3                     __pcstackBANK1:
   426     00B3                     ??_UART_Init:
   427     00B3                     ??_ExtInt_Init:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     00B3                     ??_Speed_Control:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     00B3                     ??_UART_sendChar:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     00B3                     UART_sendChar@data:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441     00B3                     	ds	1
   442     00B4                     ?_UART_sendString:
   443     00B4                     UART_sendString@str:	
   444                           ; 1 bytes @ 0x1
   445                           
   446                           
   447                           ; 2 bytes @ 0x1
   448     00B4                     	ds	1
   449     00B5                     Speed_Control@com:
   450                           
   451                           ; 1 bytes @ 0x2
   452     00B5                     	ds	1
   453     00B6                     ??_UART_sendString:
   454     00B6                     ??_main:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 1 bytes @ 0x3
   459     00B6                     	ds	2
   460                           
   461                           	psect	cstackCOMMON
   462     0070                     __pcstackCOMMON:
   463     0070                     ?_UART_Init:
   464     0070                     ?_ExtInt_Init:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0070                     ?_Position_Control:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_Speed_Control:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0070                     ?_Command_Handling:	
   474                           ; 1 bytes @ 0x0
   475                           
   476     0070                     ?_ISR:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_main:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ?_UART_sendChar:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0070                     ?i1_UART_sendChar:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ??i1_UART_sendChar:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ?_sprintf:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?__Umul8_16:	
   495                           ; 2 bytes @ 0x0
   496                           
   497     0070                     Command_Handling@com:	
   498                           ; 2 bytes @ 0x0
   499                           
   500     0070                     sprintf@f:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     __Umul8_16@multiplicand:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     i1UART_sendChar@data:	
   507                           ; 1 bytes @ 0x0
   508                           
   509                           
   510                           ; 1 bytes @ 0x0
   511     0070                     	ds	1
   512     0071                     ?i1_UART_sendString:
   513     0071                     i1UART_sendString@str:	
   514                           ; 1 bytes @ 0x1
   515                           
   516                           
   517                           ; 2 bytes @ 0x1
   518     0071                     	ds	1
   519     0072                     ??__Umul8_16:
   520                           
   521                           ; 1 bytes @ 0x2
   522     0072                     	ds	1
   523     0073                     ??_sprintf:
   524     0073                     ??i1_UART_sendString:	
   525                           ; 1 bytes @ 0x3
   526                           
   527                           
   528                           ; 1 bytes @ 0x3
   529     0073                     	ds	1
   530     0074                     __Umul8_16@product:
   531                           
   532                           ; 2 bytes @ 0x4
   533     0074                     	ds	1
   534     0075                     sprintf@ap:
   535                           
   536                           ; 1 bytes @ 0x5
   537     0075                     	ds	1
   538     0076                     sprintf@c:
   539     0076                     __Umul8_16@word_mpld:	
   540                           ; 1 bytes @ 0x6
   541                           
   542                           
   543                           ; 2 bytes @ 0x6
   544     0076                     	ds	1
   545     0077                     sprintf@sp:
   546                           
   547                           ; 1 bytes @ 0x7
   548     0077                     	ds	1
   549     0078                     __Umul8_16@multiplier:
   550                           
   551                           ; 1 bytes @ 0x8
   552     0078                     	ds	1
   553     0079                     ??___flmul:
   554                           
   555                           ; 1 bytes @ 0x9
   556     0079                     	ds	5
   557     007E                     ??_Command_Handling:
   558                           
   559                           	psect	cstackBANK0
   560     0020                     __pcstackBANK0:	
   561                           ; 1 bytes @ 0xE
   562                           
   563     0020                     ?___flmul:
   564     0020                     ___flmul@b:	
   565                           ; 4 bytes @ 0x0
   566                           
   567                           
   568                           ; 4 bytes @ 0x0
   569     0020                     	ds	4
   570     0024                     ___flmul@a:
   571                           
   572                           ; 4 bytes @ 0x4
   573     0024                     	ds	4
   574     0028                     ___flmul@sign:
   575                           
   576                           ; 1 bytes @ 0x8
   577     0028                     	ds	1
   578     0029                     ___flmul@aexp:
   579                           
   580                           ; 1 bytes @ 0x9
   581     0029                     	ds	1
   582     002A                     ___flmul@grs:
   583                           
   584                           ; 4 bytes @ 0xA
   585     002A                     	ds	4
   586     002E                     ___flmul@bexp:
   587                           
   588                           ; 1 bytes @ 0xE
   589     002E                     	ds	1
   590     002F                     ___flmul@prod:
   591                           
   592                           ; 4 bytes @ 0xF
   593     002F                     	ds	4
   594     0033                     ___flmul@temp:
   595                           
   596                           ; 2 bytes @ 0x13
   597     0033                     	ds	2
   598     0035                     ?___fldiv:
   599     0035                     ___fldiv@a:	
   600                           ; 4 bytes @ 0x15
   601                           
   602                           
   603                           ; 4 bytes @ 0x15
   604     0035                     	ds	4
   605     0039                     ___fldiv@b:
   606                           
   607                           ; 4 bytes @ 0x19
   608     0039                     	ds	4
   609     003D                     ??___fldiv:
   610                           
   611                           ; 1 bytes @ 0x1D
   612     003D                     	ds	5
   613     0042                     ___fldiv@rem:
   614                           
   615                           ; 4 bytes @ 0x22
   616     0042                     	ds	4
   617     0046                     ___fldiv@sign:
   618                           
   619                           ; 1 bytes @ 0x26
   620     0046                     	ds	1
   621     0047                     ___fldiv@new_exp:
   622                           
   623                           ; 2 bytes @ 0x27
   624     0047                     	ds	2
   625     0049                     ___fldiv@grs:
   626                           
   627                           ; 4 bytes @ 0x29
   628     0049                     	ds	4
   629     004D                     ___fldiv@bexp:
   630                           
   631                           ; 1 bytes @ 0x2D
   632     004D                     	ds	1
   633     004E                     ___fldiv@aexp:
   634                           
   635                           ; 1 bytes @ 0x2E
   636     004E                     	ds	1
   637     004F                     ?___fltol:
   638     004F                     ___fltol@f1:	
   639                           ; 4 bytes @ 0x2F
   640                           
   641                           
   642                           ; 4 bytes @ 0x2F
   643     004F                     	ds	4
   644     0053                     ??___fltol:
   645                           
   646                           ; 1 bytes @ 0x33
   647     0053                     	ds	4
   648     0057                     ___fltol@sign1:
   649                           
   650                           ; 1 bytes @ 0x37
   651     0057                     	ds	1
   652     0058                     ___fltol@exp1:
   653                           
   654                           ; 1 bytes @ 0x38
   655     0058                     	ds	1
   656     0059                     ??_Position_Control:
   657                           
   658                           ; 1 bytes @ 0x39
   659     0059                     	ds	2
   660     005B                     Position_Control@step:
   661                           
   662                           ; 2 bytes @ 0x3B
   663     005B                     	ds	2
   664     005D                     Position_Control@i:
   665                           
   666                           ; 2 bytes @ 0x3D
   667     005D                     	ds	2
   668     005F                     Position_Control@degree:
   669                           
   670                           ; 4 bytes @ 0x3F
   671     005F                     	ds	4
   672     0063                     Position_Control@com:
   673                           
   674                           ; 1 bytes @ 0x43
   675     0063                     	ds	1
   676     0064                     ??_ISR:
   677                           
   678                           ; 1 bytes @ 0x44
   679     0064                     	ds	6
   680                           
   681                           	psect	maintext
   682     06DD                     __pmaintext:	
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 174 in file "Bipolar_Stepper.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : B00/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       0       2       0       0
   705 ;;      Totals:         0       0       2       0       0
   706 ;;Total ram usage:        2 bytes
   707 ;; Hardware stack levels required when called: 7
   708 ;; This function calls:
   709 ;;		_ExtInt_Init
   710 ;;		_Speed_Control
   711 ;;		_UART_Init
   712 ;;		_UART_sendString
   713 ;; This function is called by:
   714 ;;		Startup code after reset
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     06DD                     _main:	
   719                           ;psect for function _main
   720                           
   721                           
   722                           ;Bipolar_Stepper.c: 177:     TRISD0 = 0;
   723                           
   724                           ;incstack = 0
   725                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   726     06DD  1683               	bsf	3,5	;RP0=1, select bank1
   727     06DE  1008               	bcf	8,0	;volatile
   728                           
   729                           ;Bipolar_Stepper.c: 178:     TRISD1 = 0;
   730     06DF  1088               	bcf	8,1	;volatile
   731                           
   732                           ;Bipolar_Stepper.c: 179:     TRISD2 = 0;
   733     06E0  1108               	bcf	8,2	;volatile
   734                           
   735                           ;Bipolar_Stepper.c: 181:     ExtInt_Init();
   736     06E1  120A  118A  27CE  120A  118A  	fcall	_ExtInt_Init
   737                           
   738                           ;Bipolar_Stepper.c: 182:     UART_Init();
   739     06E6  120A  118A  27A8  120A  118A  	fcall	_UART_Init
   740                           
   741                           ;Bipolar_Stepper.c: 183:     _delay((unsigned long)((20)*(16000000/4000.0)));
   742     06EB  3068               	movlw	104
   743     06EC  1683               	bsf	3,5	;RP0=1, select bank1
   744     06ED  1303               	bcf	3,6	;RP1=0, select bank1
   745     06EE  00B7               	movwf	(??_main^(0+128)+1)
   746     06EF  30E3               	movlw	227
   747     06F0  00B6               	movwf	??_main^(0+128)
   748     06F1                     u2097:
   749     06F1  0BB6               	decfsz	??_main^(0+128),f
   750     06F2  2EF1               	goto	u2097
   751     06F3  0BB7               	decfsz	(??_main^(0+128)+1),f
   752     06F4  2EF1               	goto	u2097
   753     06F5  2EF6               	nop2
   754                           
   755                           ;Bipolar_Stepper.c: 184:     UART_sendString("System is ready\r\n");
   756     06F6  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   757     06F7  1683               	bsf	3,5	;RP0=1, select bank1
   758     06F8  1303               	bcf	3,6	;RP1=0, select bank1
   759     06F9  00B4               	movwf	UART_sendString@str^(0+128)
   760     06FA  3080               	movlw	128
   761     06FB  00B5               	movwf	(UART_sendString@str+1)^(0+128)
   762     06FC  120A  118A  273B  120A  118A  	fcall	_UART_sendString
   763                           
   764                           ;Bipolar_Stepper.c: 186:     RD1 = 0;
   765     0701  1088               	bcf	8,1	;volatile
   766                           
   767                           ;Bipolar_Stepper.c: 187:     RD0 = 1;
   768     0702  1408               	bsf	8,0	;volatile
   769                           
   770                           ;Bipolar_Stepper.c: 188:     RD2 = 0;
   771     0703  1108               	bcf	8,2	;volatile
   772     0704                     l1881:
   773                           
   774                           ;Bipolar_Stepper.c: 191:     {;Bipolar_Stepper.c: 192:         if(mode == 0)
   775     0704  1683               	bsf	3,5	;RP0=1, select bank1
   776     0705  1303               	bcf	3,6	;RP1=0, select bank1
   777     0706  0820               	movf	_mode^(0+128),w
   778     0707  1D03               	btfss	3,2
   779     0708  2F04               	goto	l1881
   780                           
   781                           ;Bipolar_Stepper.c: 193:         {;Bipolar_Stepper.c: 194:             Speed_Control(spe
      +                          edmode);
   782     0709  0821               	movf	_speedmode^(0+128),w	;volatile
   783     070A  120A  118A  25A2  120A  118A  	fcall	_Speed_Control
   784     070F  2F04               	goto	l1881
   785     0710                     __end_of_main:
   786                           
   787                           	psect	text1
   788     073B                     __ptext1:	
   789 ;; *************** function _UART_sendString *****************
   790 ;; Defined at:
   791 ;;		line 42 in file "UART.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  str             2    1[BANK1 ] PTR unsigned char 
   794 ;;		 -> STR_4(18), rcvStr(17), STR_2(12), STR_1(18), 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 300/100
   803 ;;		On exit  : 300/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       2       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         0       0       2       0       0
   810 ;;Total ram usage:        2 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 6
   813 ;; This function calls:
   814 ;;		_UART_sendChar
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820     073B                     _UART_sendString:	
   821                           ;psect for function _UART_sendString
   822                           
   823     073B                     l1743:	
   824                           ;UART.c: 42: void UART_sendString(char* str);UART.c: 43: {;UART.c: 44:    while (*str)
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _UART_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   828                           
   829                           
   830                           ;UART.c: 44:    while (*str)
   831     073B  0835               	movf	(UART_sendString@str+1)^(0+128),w
   832     073C  1283               	bcf	3,5	;RP0=0, select bank0
   833     073D  00FF               	movwf	127
   834     073E  1683               	bsf	3,5	;RP0=1, select bank1
   835     073F  0834               	movf	UART_sendString@str^(0+128),w
   836     0740  0084               	movwf	4
   837     0741  1283               	bcf	3,5	;RP0=0, select bank0
   838     0742  120A  118A  2600  120A  118A  	fcall	stringtab
   839     0747  3A00               	xorlw	0
   840     0748  1903               	btfsc	3,2
   841     0749  0008               	return
   842                           
   843                           ;UART.c: 45:    {;UART.c: 46:        UART_sendChar(*str++);
   844     074A  1683               	bsf	3,5	;RP0=1, select bank1
   845     074B  0835               	movf	(UART_sendString@str+1)^(0+128),w
   846     074C  1283               	bcf	3,5	;RP0=0, select bank0
   847     074D  00FF               	movwf	127
   848     074E  1683               	bsf	3,5	;RP0=1, select bank1
   849     074F  0834               	movf	UART_sendString@str^(0+128),w
   850     0750  0084               	movwf	4
   851     0751  1283               	bcf	3,5	;RP0=0, select bank0
   852     0752  120A  118A  2600  120A  118A  	fcall	stringtab
   853     0757  120A  118A  27BC  120A  118A  	fcall	_UART_sendChar
   854     075C  3001               	movlw	1
   855     075D  1683               	bsf	3,5	;RP0=1, select bank1
   856     075E  07B4               	addwf	UART_sendString@str^(0+128),f
   857     075F  1803               	skipnc
   858     0760  0AB5               	incf	(UART_sendString@str+1)^(0+128),f
   859     0761  3000               	movlw	0
   860     0762  07B5               	addwf	(UART_sendString@str+1)^(0+128),f
   861     0763  2F3B               	goto	l1743
   862     0764                     __end_of_UART_sendString:
   863                           
   864                           	psect	text2
   865     07BC                     __ptext2:	
   866 ;; *************** function _UART_sendChar *****************
   867 ;; Defined at:
   868 ;;		line 28 in file "UART.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  data            1    wreg     unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  data            1    0[BANK1 ] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg
   877 ;; Tracked objects:
   878 ;;		On entry : 300/0
   879 ;;		On exit  : 300/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       1       0       0
   884 ;;      Temps:          0       0       0       0       0
   885 ;;      Totals:         0       0       1       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 5
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_UART_sendString
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896     07BC                     _UART_sendChar:	
   897                           ;psect for function _UART_sendChar
   898                           
   899                           
   900                           ;incstack = 0
   901                           ; Regs used in _UART_sendChar: [wreg]
   902                           ;UART_sendChar@data stored from wreg
   903     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   904     07BD  00B3               	movwf	UART_sendChar@data^(0+128)
   905     07BE                     l143:	
   906                           ;UART.c: 28: void UART_sendChar(char data);UART.c: 29: {;UART.c: 30:    while (!TXIF);
   907                           
   908     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   909     07BF  1E0C               	btfss	12,4	;volatile
   910     07C0  2FBE               	goto	l143
   911                           
   912                           ;UART.c: 31:    TXREG = data;
   913     07C1  1683               	bsf	3,5	;RP0=1, select bank1
   914     07C2  0833               	movf	UART_sendChar@data^(0+128),w
   915     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   916     07C4  0099               	movwf	25	;volatile
   917     07C5  0008               	return
   918     07C6                     __end_of_UART_sendChar:
   919                           
   920                           	psect	text3
   921     07A8                     __ptext3:	
   922 ;; *************** function _UART_Init *****************
   923 ;; Defined at:
   924 ;;		line 4 in file "UART.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg
   933 ;; Tracked objects:
   934 ;;		On entry : B00/100
   935 ;;		On exit  : B00/0
   936 ;;		Unchanged: 800/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; Hardware stack levels required when called: 5
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952     07A8                     _UART_Init:	
   953                           ;psect for function _UART_Init
   954                           
   955                           
   956                           ;UART.c: 7:     TRISCbits.TRISC6 = 1;
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _UART_Init: [wreg]
   960     07A8  1707               	bsf	7,6	;volatile
   961                           
   962                           ;UART.c: 8:     TRISCbits.TRISC7 = 1;
   963     07A9  1787               	bsf	7,7	;volatile
   964                           
   965                           ;UART.c: 10:     SPBRG = ((16000000 / 16) / 9600) - 1;
   966     07AA  3067               	movlw	103
   967     07AB  0099               	movwf	25	;volatile
   968                           
   969                           ;UART.c: 11:     BRGH = 1;
   970     07AC  1518               	bsf	24,2	;volatile
   971                           
   972                           ;UART.c: 13:     SYNC = 0;
   973     07AD  1218               	bcf	24,4	;volatile
   974                           
   975                           ;UART.c: 14:     SPEN = 1;
   976     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   977     07AF  1798               	bsf	24,7	;volatile
   978                           
   979                           ;UART.c: 16:     RCIE = 1;
   980     07B0  1683               	bsf	3,5	;RP0=1, select bank1
   981     07B1  168C               	bsf	12,5	;volatile
   982                           
   983                           ;UART.c: 17:     PEIE = 1;
   984     07B2  170B               	bsf	11,6	;volatile
   985                           
   986                           ;UART.c: 18:     GIE = 1;
   987     07B3  178B               	bsf	11,7	;volatile
   988                           
   989                           ;UART.c: 20:     TXEN = 1;
   990     07B4  1698               	bsf	24,5	;volatile
   991                           
   992                           ;UART.c: 21:     CREN = 1;
   993     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   994     07B6  1618               	bsf	24,4	;volatile
   995                           
   996                           ;UART.c: 23:     TX9 = 0;
   997     07B7  1683               	bsf	3,5	;RP0=1, select bank1
   998     07B8  1318               	bcf	24,6	;volatile
   999                           
  1000                           ;UART.c: 24:     RX9 = 0;
  1001     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1002     07BA  1318               	bcf	24,6	;volatile
  1003     07BB  0008               	return
  1004     07BC                     __end_of_UART_Init:
  1005                           
  1006                           	psect	text4
  1007     05A2                     __ptext4:	
  1008 ;; *************** function _Speed_Control *****************
  1009 ;; Defined at:
  1010 ;;		line 83 in file "Bipolar_Stepper.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  com             1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  com             1    2[BANK1 ] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 300/100
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         0       0       1       0       0
  1026 ;;      Temps:          0       0       2       0       0
  1027 ;;      Totals:         0       0       3       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 5
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038     05A2                     _Speed_Control:	
  1039                           ;psect for function _Speed_Control
  1040                           
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _Speed_Control: [wreg+status,2+status,0]
  1044                           ;Speed_Control@com stored from wreg
  1045     05A2  00B5               	movwf	Speed_Control@com^(0+128)
  1046                           
  1047                           ;Bipolar_Stepper.c: 83: void Speed_Control(uint8_t com);Bipolar_Stepper.c: 84: {;Bipolar
      +                          _Stepper.c: 86:     if(com == 1)
  1048     05A3  0335               	decf	Speed_Control@com^(0+128),w
  1049     05A4  1D03               	btfss	3,2
  1050     05A5  2DC2               	goto	l1753
  1051                           
  1052                           ;Bipolar_Stepper.c: 87:     {;Bipolar_Stepper.c: 88:         RD2 = 1;
  1053     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1054     05A7  1508               	bsf	8,2	;volatile
  1055                           
  1056                           ;Bipolar_Stepper.c: 89:         _delay((unsigned long)((1000)*(16000000/4000000.0)));
  1057     05A8  3006               	movlw	6
  1058     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  1059     05AA  1303               	bcf	3,6	;RP1=0, select bank1
  1060     05AB  00B4               	movwf	(??_Speed_Control^(0+128)+1)
  1061     05AC  302F               	movlw	47
  1062     05AD  00B3               	movwf	??_Speed_Control^(0+128)
  1063     05AE                     u2107:
  1064     05AE  0BB3               	decfsz	??_Speed_Control^(0+128),f
  1065     05AF  2DAE               	goto	u2107
  1066     05B0  0BB4               	decfsz	(??_Speed_Control^(0+128)+1),f
  1067     05B1  2DAE               	goto	u2107
  1068     05B2  2DB3               	nop2
  1069                           
  1070                           ;Bipolar_Stepper.c: 90:         RD2 = 0;
  1071     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1072     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1073     05B5  1108               	bcf	8,2	;volatile
  1074                           
  1075                           ;Bipolar_Stepper.c: 91:         _delay((unsigned long)((1000)*(16000000/4000000.0)));
  1076     05B6  3006               	movlw	6
  1077     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1078     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1079     05B9  00B4               	movwf	(??_Speed_Control^(0+128)+1)
  1080     05BA  302F               	movlw	47
  1081     05BB  00B3               	movwf	??_Speed_Control^(0+128)
  1082     05BC                     u2117:
  1083     05BC  0BB3               	decfsz	??_Speed_Control^(0+128),f
  1084     05BD  2DBC               	goto	u2117
  1085     05BE  0BB4               	decfsz	(??_Speed_Control^(0+128)+1),f
  1086     05BF  2DBC               	goto	u2117
  1087     05C0  2DC1               	nop2
  1088                           
  1089                           ;Bipolar_Stepper.c: 92:     }
  1090     05C1  0008               	return
  1091     05C2                     l1753:
  1092     05C2  3002               	movlw	2
  1093     05C3  0635               	xorwf	Speed_Control@com^(0+128),w
  1094     05C4  1D03               	btfss	3,2
  1095     05C5  2DE2               	goto	l1761
  1096                           
  1097                           ;Bipolar_Stepper.c: 95:     {;Bipolar_Stepper.c: 96:         RD2 = 1;
  1098     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1099     05C7  1508               	bsf	8,2	;volatile
  1100                           
  1101                           ;Bipolar_Stepper.c: 97:         _delay((unsigned long)((750)*(16000000/4000000.0)));
  1102     05C8  3004               	movlw	4
  1103     05C9  1683               	bsf	3,5	;RP0=1, select bank1
  1104     05CA  1303               	bcf	3,6	;RP1=0, select bank1
  1105     05CB  00B4               	movwf	(??_Speed_Control^(0+128)+1)
  1106     05CC  30E3               	movlw	227
  1107     05CD  00B3               	movwf	??_Speed_Control^(0+128)
  1108     05CE                     u2127:
  1109     05CE  0BB3               	decfsz	??_Speed_Control^(0+128),f
  1110     05CF  2DCE               	goto	u2127
  1111     05D0  0BB4               	decfsz	(??_Speed_Control^(0+128)+1),f
  1112     05D1  2DCE               	goto	u2127
  1113     05D2  2DD3               	nop2
  1114                           
  1115                           ;Bipolar_Stepper.c: 98:         RD2 = 0;
  1116     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1117     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1118     05D5  1108               	bcf	8,2	;volatile
  1119                           
  1120                           ;Bipolar_Stepper.c: 99:         _delay((unsigned long)((750)*(16000000/4000000.0)));
  1121     05D6  3004               	movlw	4
  1122     05D7  1683               	bsf	3,5	;RP0=1, select bank1
  1123     05D8  1303               	bcf	3,6	;RP1=0, select bank1
  1124     05D9  00B4               	movwf	(??_Speed_Control^(0+128)+1)
  1125     05DA  30E3               	movlw	227
  1126     05DB  00B3               	movwf	??_Speed_Control^(0+128)
  1127     05DC                     u2137:
  1128     05DC  0BB3               	decfsz	??_Speed_Control^(0+128),f
  1129     05DD  2DDC               	goto	u2137
  1130     05DE  0BB4               	decfsz	(??_Speed_Control^(0+128)+1),f
  1131     05DF  2DDC               	goto	u2137
  1132     05E0  2DE1               	nop2
  1133                           
  1134                           ;Bipolar_Stepper.c: 100:     }
  1135     05E1  0008               	return
  1136     05E2                     l1761:
  1137     05E2  3003               	movlw	3
  1138     05E3  0635               	xorwf	Speed_Control@com^(0+128),w
  1139     05E4  1D03               	btfss	3,2
  1140     05E5  0008               	return
  1141                           
  1142                           ;Bipolar_Stepper.c: 103:     {;Bipolar_Stepper.c: 104:         RD2 = 1;
  1143     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1144     05E7  1508               	bsf	8,2	;volatile
  1145                           
  1146                           ;Bipolar_Stepper.c: 105:         _delay((unsigned long)((500)*(16000000/4000000.0)));
  1147     05E8  3003               	movlw	3
  1148     05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1149     05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1150     05EB  00B4               	movwf	(??_Speed_Control^(0+128)+1)
  1151     05EC  3097               	movlw	151
  1152     05ED  00B3               	movwf	??_Speed_Control^(0+128)
  1153     05EE                     u2147:
  1154     05EE  0BB3               	decfsz	??_Speed_Control^(0+128),f
  1155     05EF  2DEE               	goto	u2147
  1156     05F0  0BB4               	decfsz	(??_Speed_Control^(0+128)+1),f
  1157     05F1  2DEE               	goto	u2147
  1158                           
  1159                           ;Bipolar_Stepper.c: 106:         RD2 = 0;
  1160     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1161     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1162     05F4  1108               	bcf	8,2	;volatile
  1163                           
  1164                           ;Bipolar_Stepper.c: 107:         _delay((unsigned long)((500)*(16000000/4000000.0)));
  1165     05F5  3003               	movlw	3
  1166     05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1167     05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1168     05F8  00B4               	movwf	(??_Speed_Control^(0+128)+1)
  1169     05F9  3097               	movlw	151
  1170     05FA  00B3               	movwf	??_Speed_Control^(0+128)
  1171     05FB                     u2157:
  1172     05FB  0BB3               	decfsz	??_Speed_Control^(0+128),f
  1173     05FC  2DFB               	goto	u2157
  1174     05FD  0BB4               	decfsz	(??_Speed_Control^(0+128)+1),f
  1175     05FE  2DFB               	goto	u2157
  1176     05FF  0008               	return
  1177     0600                     __end_of_Speed_Control:
  1178                           
  1179                           	psect	text5
  1180     07CE                     __ptext5:	
  1181 ;; *************** function _ExtInt_Init *****************
  1182 ;; Defined at:
  1183 ;;		line 33 in file "Bipolar_Stepper.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		None
  1192 ;; Tracked objects:
  1193 ;;		On entry : B00/100
  1194 ;;		On exit  : B00/100
  1195 ;;		Unchanged: 800/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0
  1200 ;;      Totals:         0       0       0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 5
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211     07CE                     _ExtInt_Init:	
  1212                           ;psect for function _ExtInt_Init
  1213                           
  1214                           
  1215                           ;Bipolar_Stepper.c: 34:     TRISB0 = 1;
  1216                           
  1217                           ;incstack = 0
  1218                           ; Regs used in _ExtInt_Init: []
  1219     07CE  1406               	bsf	6,0	;volatile
  1220                           
  1221                           ;Bipolar_Stepper.c: 36:     INTEDG = 0;
  1222     07CF  1301               	bcf	1,6	;volatile
  1223                           
  1224                           ;Bipolar_Stepper.c: 37:     INTF = 0;
  1225     07D0  108B               	bcf	11,1	;volatile
  1226                           
  1227                           ;Bipolar_Stepper.c: 38:     INTE = 1;
  1228     07D1  160B               	bsf	11,4	;volatile
  1229                           
  1230                           ;Bipolar_Stepper.c: 39:     GIE = 1;
  1231     07D2  178B               	bsf	11,7	;volatile
  1232     07D3  0008               	return
  1233     07D4                     __end_of_ExtInt_Init:
  1234                           
  1235                           	psect	text6
  1236     0697                     __ptext6:	
  1237 ;; *************** function _ISR *****************
  1238 ;; Defined at:
  1239 ;;		line 145 in file "Bipolar_Stepper.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 300/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          0       6       0       0       0
  1256 ;;      Totals:         0       6       0       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 4
  1260 ;; This function calls:
  1261 ;;		_Command_Handling
  1262 ;;		_sprintf
  1263 ;;		i1_UART_sendString
  1264 ;; This function is called by:
  1265 ;;		Interrupt level 1
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269     0697                     _ISR:	
  1270                           ;psect for function _ISR
  1271                           
  1272                           
  1273                           ;Bipolar_Stepper.c: 148:     if(INTF){
  1274     0697  1C8B               	btfss	11,1	;volatile
  1275     0698  2EAB               	goto	i1l93
  1276                           
  1277                           ;Bipolar_Stepper.c: 150:         _delay((unsigned long)((20)*(16000000/4000.0)));
  1278     0699  3068               	movlw	104
  1279     069A  1283               	bcf	3,5	;RP0=0, select bank0
  1280     069B  1303               	bcf	3,6	;RP1=0, select bank0
  1281     069C  00E5               	movwf	??_ISR+1
  1282     069D  30E3               	movlw	227
  1283     069E  00E4               	movwf	??_ISR
  1284     069F                     u216_27:
  1285     069F  0BE4               	decfsz	??_ISR,f
  1286     06A0  2E9F               	goto	u216_27
  1287     06A1  0BE5               	decfsz	??_ISR+1,f
  1288     06A2  2E9F               	goto	u216_27
  1289     06A3  2EA4               	nop2
  1290                           
  1291                           ;Bipolar_Stepper.c: 151:         if(RB0 == 0){
  1292     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1293     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1294     06A6  1C06               	btfss	6,0	;volatile
  1295                           
  1296                           ;Bipolar_Stepper.c: 152:             RD1 = 1;
  1297     06A7  1488               	bsf	8,1	;volatile
  1298     06A8                     i1l95:
  1299     06A8  1C06               	btfss	6,0	;volatile
  1300     06A9  2EA8               	goto	i1l95
  1301                           
  1302                           ;Bipolar_Stepper.c: 156:         INTF = 0;
  1303     06AA  108B               	bcf	11,1	;volatile
  1304     06AB                     i1l93:	
  1305                           ;Bipolar_Stepper.c: 157:     }
  1306                           
  1307                           
  1308                           ;Bipolar_Stepper.c: 159:     if(RCIF){
  1309     06AB  1E8C               	btfss	12,5	;volatile
  1310     06AC  2ED1               	goto	i1l100
  1311                           
  1312                           ;Bipolar_Stepper.c: 161:         if (OERR)
  1313     06AD  1C98               	btfss	24,1	;volatile
  1314     06AE  2EB1               	goto	i1l1859
  1315                           
  1316                           ;Bipolar_Stepper.c: 162:         {;Bipolar_Stepper.c: 163:             CREN = 0;
  1317     06AF  1218               	bcf	24,4	;volatile
  1318                           
  1319                           ;Bipolar_Stepper.c: 164:             CREN = 1;
  1320     06B0  1618               	bsf	24,4	;volatile
  1321     06B1                     i1l1859:
  1322                           
  1323                           ;Bipolar_Stepper.c: 166:         command = RCREG;
  1324     06B1  081A               	movf	26,w	;volatile
  1325     06B2  00EA               	movwf	_command	;volatile
  1326                           
  1327                           ;Bipolar_Stepper.c: 167:         sprintf(rcvStr,"Received: %c\r\n",command);
  1328     06B3  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1329     06B4  00F0               	movwf	sprintf@f
  1330     06B5  086A               	movf	_command,w	;volatile
  1331     06B6  00E4               	movwf	??_ISR
  1332     06B7  01E5               	clrf	??_ISR+1
  1333     06B8  0864               	movf	??_ISR,w
  1334     06B9  00F1               	movwf	?_sprintf+1
  1335     06BA  0865               	movf	??_ISR+1,w
  1336     06BB  00F2               	movwf	?_sprintf+2
  1337     06BC  30A2               	movlw	(low (_rcvStr| 0))& (0+255)
  1338     06BD  120A  118A  264F  120A  118A  	fcall	_sprintf
  1339                           
  1340                           ;Bipolar_Stepper.c: 168:         UART_sendString(rcvStr);
  1341     06C2  30A2               	movlw	(low (_rcvStr| 0))& (0+255)
  1342     06C3  00F1               	movwf	i1UART_sendString@str
  1343     06C4  3000               	movlw	0
  1344     06C5  00F2               	movwf	i1UART_sendString@str+1
  1345     06C6  120A  118A  2787  120A  118A  	fcall	i1_UART_sendString
  1346                           
  1347                           ;Bipolar_Stepper.c: 170:         Command_Handling(command);
  1348     06CB  086A               	movf	_command,w	;volatile
  1349     06CC  120A  118A  2710  120A  118A  	fcall	_Command_Handling
  1350     06D1                     i1l100:
  1351     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1352     06D2  0869               	movf	??_ISR+5,w
  1353     06D3  00FF               	movwf	127
  1354     06D4  0868               	movf	??_ISR+4,w
  1355     06D5  008A               	movwf	10
  1356     06D6  0867               	movf	??_ISR+3,w
  1357     06D7  0084               	movwf	4
  1358     06D8  0E66               	swapf	??_ISR+2,w
  1359     06D9  0083               	movwf	3
  1360     06DA  0EFE               	swapf	126,f
  1361     06DB  0E7E               	swapf	126,w
  1362     06DC  0009               	retfie
  1363     06DD                     __end_of_ISR:
  1364                           
  1365                           	psect	intentry
  1366     0004                     __pintentry:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1369                           
  1370     0004                     interrupt_function:
  1371     007E                     saved_w	set	btemp
  1372     0004  00FE               	movwf	btemp
  1373     0005  0E03               	swapf	3,w
  1374     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1375     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1376     0008  00E6               	movwf	??_ISR+2
  1377     0009  0804               	movf	4,w
  1378     000A  00E7               	movwf	??_ISR+3
  1379     000B  080A               	movf	10,w
  1380     000C  00E8               	movwf	??_ISR+4
  1381     000D  087F               	movf	btemp+1,w
  1382     000E  00E9               	movwf	??_ISR+5
  1383     000F  120A  118A  2E97   	ljmp	_ISR
  1384                           
  1385                           	psect	text7
  1386     064F                     __ptext7:	
  1387 ;; *************** function _sprintf *****************
  1388 ;; Defined at:
  1389 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  sp              1    wreg     PTR unsigned char 
  1392 ;;		 -> rcvStr(17), 
  1393 ;;  f               1    0[COMMON] PTR const unsigned char 
  1394 ;;		 -> STR_3(15), 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  sp              1    7[COMMON] PTR unsigned char 
  1397 ;;		 -> rcvStr(17), 
  1398 ;;  tmpval          4    0        struct .
  1399 ;;  cp              2    0        PTR const unsigned char 
  1400 ;;  len             2    0        unsigned int 
  1401 ;;  val             2    0        unsigned int 
  1402 ;;  c               1    6[COMMON] unsigned char 
  1403 ;;  ap              1    5[COMMON] PTR void [1]
  1404 ;;		 -> ?_sprintf(2), 
  1405 ;;  flag            1    0        unsigned char 
  1406 ;;  prec            1    0        char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    0[COMMON] int 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1411 ;; Tracked objects:
  1412 ;;		On entry : 300/0
  1413 ;;		On exit  : B00/0
  1414 ;;		Unchanged: 300/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         3       0       0       0       0
  1417 ;;      Locals:         3       0       0       0       0
  1418 ;;      Temps:          2       0       0       0       0
  1419 ;;      Totals:         8       0       0       0       0
  1420 ;;Total ram usage:        8 bytes
  1421 ;; Hardware stack levels used: 2
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_ISR
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429     064F                     _sprintf:	
  1430                           ;psect for function _sprintf
  1431                           
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1435                           ;sprintf@sp stored from wreg
  1436     064F  00F7               	movwf	sprintf@sp
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1439     0650  3071               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1440     0651  00F5               	movwf	sprintf@ap
  1441     0652                     i1l1813:	
  1442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1443                           
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1446     0652  3001               	movlw	1
  1447     0653  07F0               	addwf	sprintf@f,f
  1448     0654  30FF               	movlw	-1
  1449     0655  0770               	addwf	sprintf@f,w
  1450     0656  0084               	movwf	4
  1451     0657  120A  118A  260A  120A  118A  	fcall	stringdir
  1452     065C  00F6               	movwf	sprintf@c
  1453     065D  0876               	movf	sprintf@c,w
  1454     065E  1903               	btfsc	3,2
  1455     065F  2E92               	goto	i1l1815
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1458     0660  3025               	movlw	37
  1459     0661  0676               	xorwf	sprintf@c,w
  1460     0662  1903               	btfsc	3,2
  1461     0663  2E77               	goto	i1l1811
  1462     0664  2E6D               	goto	i1l1807
  1463     0665                     i1l1803:	
  1464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1469                           
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1472     0665  0875               	movf	sprintf@ap,w
  1473     0666  0084               	movwf	4
  1474     0667  0800               	movf	0,w
  1475     0668  00F6               	movwf	sprintf@c
  1476     0669  3002               	movlw	2
  1477     066A  00FF               	movwf	127
  1478     066B  087F               	movf	127,w
  1479     066C  07F5               	addwf	sprintf@ap,f
  1480     066D                     i1l1807:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1483     066D  0877               	movf	sprintf@sp,w
  1484     066E  0084               	movwf	4
  1485     066F  0876               	movf	sprintf@c,w
  1486     0670  1383               	bcf	3,7	;select IRP bank0
  1487     0671  0080               	movwf	0
  1488     0672  3001               	movlw	1
  1489     0673  00FF               	movwf	127
  1490     0674  087F               	movf	127,w
  1491     0675  07F7               	addwf	sprintf@sp,f
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 836:    continue;
  1494     0676  2E52               	goto	i1l1813
  1495     0677                     i1l1811:
  1496     0677  3001               	movlw	1
  1497     0678  07F0               	addwf	sprintf@f,f
  1498     0679  30FF               	movlw	-1
  1499     067A  0770               	addwf	sprintf@f,w
  1500     067B  0084               	movwf	4
  1501     067C  120A  118A  260A  120A  118A  	fcall	stringdir
  1502     0681  00F6               	movwf	sprintf@c
  1503     0682  00F3               	movwf	??_sprintf
  1504     0683  01F4               	clrf	??_sprintf+1
  1505                           
  1506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 1, Range of values is 0 to 0
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte            4     3 (average)
  1512                           ; direct_byte           11     8 (fixed)
  1513                           ; jumptable            260     6 (fixed)
  1514                           ;	Chosen strategy is simple_byte
  1515     0684  0874               	movf	??_sprintf+1,w
  1516     0685  3A00               	xorlw	0	; case 0
  1517     0686  1903               	skipnz
  1518     0687  2E89               	goto	i1l1905
  1519     0688  2E6D               	goto	i1l1807
  1520     0689                     i1l1905:
  1521                           
  1522                           ; Switch size 1, requested type "simple"
  1523                           ; Number of cases is 2, Range of values is 0 to 99
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte            7     4 (average)
  1527                           ; jumptable            260     6 (fixed)
  1528                           ;	Chosen strategy is simple_byte
  1529     0689  0873               	movf	??_sprintf,w
  1530     068A  3A00               	xorlw	0	; case 0
  1531     068B  1903               	skipnz
  1532     068C  2E92               	goto	i1l1815
  1533     068D  3A63               	xorlw	99	; case 99
  1534     068E  1903               	skipnz
  1535     068F  2E65               	goto	i1l1803
  1536     0690  2E6D               	goto	i1l1807
  1537     0691  2E52               	goto	i1l1813
  1538     0692                     i1l1815:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1541     0692  0877               	movf	sprintf@sp,w
  1542     0693  0084               	movwf	4
  1543     0694  1383               	bcf	3,7	;select IRP bank0
  1544     0695  0180               	clrf	0
  1545     0696  0008               	return
  1546     0697                     __end_of_sprintf:
  1547                           
  1548                           	psect	text8
  1549     0710                     __ptext8:	
  1550 ;; *************** function _Command_Handling *****************
  1551 ;; Defined at:
  1552 ;;		line 112 in file "Bipolar_Stepper.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  com             1    wreg     unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  com             1    0[COMMON] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 300/0
  1563 ;;		On exit  : 200/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         0       0       0       0       0
  1570 ;;Total ram usage:        0 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 3
  1573 ;; This function calls:
  1574 ;;		_Position_Control
  1575 ;; This function is called by:
  1576 ;;		_ISR
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     0710                     _Command_Handling:	
  1581                           ;psect for function _Command_Handling
  1582                           
  1583                           
  1584                           ;Bipolar_Stepper.c: 112: void Command_Handling(uint8_t com);Bipolar_Stepper.c: 113: {;Bi
      +                          polar_Stepper.c: 115:     if(command == 48)
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _Command_Handling: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1588     0710  3030               	movlw	48
  1589     0711  066A               	xorwf	_command,w	;volatile
  1590     0712  1D03               	btfss	3,2
  1591     0713  2F17               	goto	i1l1773
  1592                           
  1593                           ;Bipolar_Stepper.c: 116:     {;Bipolar_Stepper.c: 117:         RD0 = ~RD0;
  1594     0714  3001               	movlw	1
  1595     0715  0688               	xorwf	8,f
  1596                           
  1597                           ;Bipolar_Stepper.c: 118:     }
  1598     0716  0008               	return
  1599     0717                     i1l1773:
  1600     0717  3031               	movlw	49
  1601     0718  066A               	xorwf	_command,w	;volatile
  1602     0719  1D03               	btfss	3,2
  1603     071A  2F20               	goto	i1l1779
  1604                           
  1605                           ;Bipolar_Stepper.c: 121:     {;Bipolar_Stepper.c: 122:         mode = 0;
  1606     071B  1683               	bsf	3,5	;RP0=1, select bank1
  1607     071C  01A0               	clrf	_mode^(0+128)
  1608                           
  1609                           ;Bipolar_Stepper.c: 123:         speedmode = 1;
  1610     071D  3001               	movlw	1
  1611     071E  00A1               	movwf	_speedmode^(0+128)	;volatile
  1612                           
  1613                           ;Bipolar_Stepper.c: 124:     }
  1614     071F  0008               	return
  1615     0720                     i1l1779:
  1616     0720  3032               	movlw	50
  1617     0721  066A               	xorwf	_command,w	;volatile
  1618     0722  1D03               	btfss	3,2
  1619     0723  2F29               	goto	i1l1785
  1620                           
  1621                           ;Bipolar_Stepper.c: 127:     {;Bipolar_Stepper.c: 128:         mode = 0;
  1622     0724  1683               	bsf	3,5	;RP0=1, select bank1
  1623     0725  01A0               	clrf	_mode^(0+128)
  1624                           
  1625                           ;Bipolar_Stepper.c: 129:         speedmode = 2;
  1626     0726  3002               	movlw	2
  1627     0727  00A1               	movwf	_speedmode^(0+128)	;volatile
  1628                           
  1629                           ;Bipolar_Stepper.c: 130:     }
  1630     0728  0008               	return
  1631     0729                     i1l1785:
  1632     0729  3033               	movlw	51
  1633     072A  066A               	xorwf	_command,w	;volatile
  1634     072B  1D03               	btfss	3,2
  1635     072C  2F32               	goto	i1l86
  1636                           
  1637                           ;Bipolar_Stepper.c: 133:     {;Bipolar_Stepper.c: 134:         mode = 0;
  1638     072D  1683               	bsf	3,5	;RP0=1, select bank1
  1639     072E  01A0               	clrf	_mode^(0+128)
  1640                           
  1641                           ;Bipolar_Stepper.c: 135:         speedmode = 3;
  1642     072F  3003               	movlw	3
  1643     0730  00A1               	movwf	_speedmode^(0+128)	;volatile
  1644                           
  1645                           ;Bipolar_Stepper.c: 136:     }
  1646     0731  0008               	return
  1647     0732                     i1l86:	
  1648                           ;Bipolar_Stepper.c: 137:     else
  1649                           
  1650                           
  1651                           ;Bipolar_Stepper.c: 138:     {;Bipolar_Stepper.c: 139:         mode = 1;
  1652     0732  1683               	bsf	3,5	;RP0=1, select bank1
  1653     0733  01A0               	clrf	_mode^(0+128)
  1654     0734  0AA0               	incf	_mode^(0+128),f
  1655                           
  1656                           ;Bipolar_Stepper.c: 140:         Position_Control(command);
  1657     0735  1283               	bcf	3,5	;RP0=0, select bank0
  1658     0736  086A               	movf	_command,w	;volatile
  1659     0737  120A  118A  2493   	fcall	_Position_Control
  1660     073A  0008               	return
  1661     073B                     __end_of_Command_Handling:
  1662                           
  1663                           	psect	text9
  1664     0493                     __ptext9:	
  1665 ;; *************** function _Position_Control *****************
  1666 ;; Defined at:
  1667 ;;		line 43 in file "Bipolar_Stepper.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  com             1    wreg     unsigned char 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  com             1   67[BANK0 ] unsigned char 
  1672 ;;  i               2   61[BANK0 ] unsigned int 
  1673 ;;  degree          4   63[BANK0 ] float 
  1674 ;;  step            2   59[BANK0 ] unsigned int 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 300/0
  1681 ;;		On exit  : 300/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         0       0       0       0       0
  1685 ;;      Locals:         0       9       0       0       0
  1686 ;;      Temps:          0       2       0       0       0
  1687 ;;      Totals:         0      11       0       0       0
  1688 ;;Total ram usage:       11 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 2
  1691 ;; This function calls:
  1692 ;;		___fldiv
  1693 ;;		___flmul
  1694 ;;		___fltol
  1695 ;;		i1_UART_sendString
  1696 ;; This function is called by:
  1697 ;;		_Command_Handling
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701     0493                     _Position_Control:	
  1702                           ;psect for function _Position_Control
  1703                           
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _Position_Control: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1707                           ;Position_Control@com stored from wreg
  1708     0493  00E3               	movwf	Position_Control@com
  1709                           
  1710                           ;Bipolar_Stepper.c: 47:     if(com == 52)
  1711     0494  3034               	movlw	52
  1712     0495  0663               	xorwf	Position_Control@com,w
  1713     0496  1D03               	btfss	3,2
  1714     0497  2C9C               	goto	i1l1697
  1715                           
  1716                           ;Bipolar_Stepper.c: 48:     {;Bipolar_Stepper.c: 49:         degree = 30;
  1717     0498  3041               	movlw	65
  1718     0499  00E2               	movwf	Position_Control@degree+3
  1719     049A  30F0               	movlw	240
  1720     049B  2CBF               	goto	L5
  1721     049C                     i1l1697:	
  1722                           ;Bipolar_Stepper.c: 50:     }else if(com == 53)
  1723                           
  1724     049C  3035               	movlw	53
  1725     049D  0663               	xorwf	Position_Control@com,w
  1726     049E  1D03               	btfss	3,2
  1727     049F  2CA2               	goto	i1l1701
  1728                           
  1729                           ;Bipolar_Stepper.c: 51:     {;Bipolar_Stepper.c: 52:         degree = 45;
  1730     04A0  3042               	movlw	66
  1731     04A1  2CAD               	goto	L6
  1732     04A2                     i1l1701:	
  1733                           ;Bipolar_Stepper.c: 53:     }else if(com == 54)
  1734                           
  1735     04A2  3036               	movlw	54
  1736     04A3  0663               	xorwf	Position_Control@com,w
  1737     04A4  1D03               	btfss	3,2
  1738     04A5  2CA8               	goto	i1l1705
  1739                           
  1740                           ;Bipolar_Stepper.c: 54:     {;Bipolar_Stepper.c: 55:         degree = 90;
  1741     04A6  3042               	movlw	66
  1742     04A7  2CBD               	goto	L7
  1743     04A8                     i1l1705:	
  1744                           ;Bipolar_Stepper.c: 56:     }else if(com == 55)
  1745                           
  1746     04A8  3037               	movlw	55
  1747     04A9  0663               	xorwf	Position_Control@com,w
  1748     04AA  1D03               	btfss	3,2
  1749     04AB  2CB0               	goto	i1l1709
  1750                           
  1751                           ;Bipolar_Stepper.c: 57:     {;Bipolar_Stepper.c: 58:         degree = 180;
  1752     04AC  3043               	movlw	67
  1753     04AD                     L6:
  1754     04AD  00E2               	movwf	Position_Control@degree+3
  1755     04AE  3034               	movlw	52
  1756     04AF  2CBF               	goto	L5
  1757     04B0                     i1l1709:	
  1758                           ;Bipolar_Stepper.c: 59:     }else if(com == 56)
  1759                           
  1760     04B0  3038               	movlw	56
  1761     04B1  0663               	xorwf	Position_Control@com,w
  1762     04B2  1D03               	btfss	3,2
  1763     04B3  2CB8               	goto	i1l1713
  1764                           
  1765                           ;Bipolar_Stepper.c: 60:     {;Bipolar_Stepper.c: 61:         degree = 270;
  1766     04B4  3043               	movlw	67
  1767     04B5  00E2               	movwf	Position_Control@degree+3
  1768     04B6  3087               	movlw	135
  1769     04B7  2CBF               	goto	L5
  1770     04B8                     i1l1713:	
  1771                           ;Bipolar_Stepper.c: 62:     }else if(com == 57)
  1772                           
  1773     04B8  3039               	movlw	57
  1774     04B9  0663               	xorwf	Position_Control@com,w
  1775     04BA  1D03               	btfss	3,2
  1776     04BB  2CC5               	goto	i1l1717
  1777                           
  1778                           ;Bipolar_Stepper.c: 63:     {;Bipolar_Stepper.c: 64:         degree = 360;
  1779     04BC  3043               	movlw	67
  1780     04BD                     L7:
  1781     04BD  00E2               	movwf	Position_Control@degree+3
  1782     04BE  30B4               	movlw	180
  1783     04BF                     L5:
  1784     04BF  00E1               	movwf	Position_Control@degree+2
  1785     04C0  3000               	movlw	0
  1786     04C1  00E0               	movwf	Position_Control@degree+1
  1787     04C2  3000               	movlw	0
  1788     04C3  00DF               	movwf	Position_Control@degree
  1789                           
  1790                           ;Bipolar_Stepper.c: 65:     }else{
  1791     04C4  2CCD               	goto	i1l1721
  1792     04C5                     i1l1717:
  1793                           
  1794                           ;Bipolar_Stepper.c: 66:         UART_sendString("Invalid command\r\n");
  1795     04C5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1796     04C6  00F1               	movwf	i1UART_sendString@str
  1797     04C7  3080               	movlw	128
  1798     04C8  00F2               	movwf	i1UART_sendString@str+1
  1799     04C9  120A  118A  2787   	fcall	i1_UART_sendString
  1800     04CC  0008               	return
  1801     04CD                     i1l1721:
  1802                           
  1803                           ;Bipolar_Stepper.c: 70:     uint16_t step = (degree * 1.0)/1.8;
  1804     04CD  0862               	movf	Position_Control@degree+3,w
  1805     04CE  00A7               	movwf	___flmul@a+3
  1806     04CF  0861               	movf	Position_Control@degree+2,w
  1807     04D0  00A6               	movwf	___flmul@a+2
  1808     04D1  0860               	movf	Position_Control@degree+1,w
  1809     04D2  00A5               	movwf	___flmul@a+1
  1810     04D3  085F               	movf	Position_Control@degree,w
  1811     04D4  00A4               	movwf	___flmul@a
  1812     04D5  303F               	movlw	63
  1813     04D6  00A3               	movwf	___flmul@b+3
  1814     04D7  3080               	movlw	128
  1815     04D8  00A2               	movwf	___flmul@b+2
  1816     04D9  3000               	movlw	0
  1817     04DA  00A1               	movwf	___flmul@b+1
  1818     04DB  3000               	movlw	0
  1819     04DC  00A0               	movwf	___flmul@b
  1820     04DD  120A  118A  2023  120A  118A  	fcall	___flmul
  1821     04E2  0823               	movf	?___flmul+3,w
  1822     04E3  00BC               	movwf	___fldiv@b+3
  1823     04E4  0822               	movf	?___flmul+2,w
  1824     04E5  00BB               	movwf	___fldiv@b+2
  1825     04E6  0821               	movf	?___flmul+1,w
  1826     04E7  00BA               	movwf	___fldiv@b+1
  1827     04E8  0820               	movf	?___flmul,w
  1828     04E9  00B9               	movwf	___fldiv@b
  1829     04EA  303F               	movlw	63
  1830     04EB  00B8               	movwf	___fldiv@a+3
  1831     04EC  30E6               	movlw	230
  1832     04ED  00B7               	movwf	___fldiv@a+2
  1833     04EE  3066               	movlw	102
  1834     04EF  00B6               	movwf	___fldiv@a+1
  1835     04F0  3066               	movlw	102
  1836     04F1  00B5               	movwf	___fldiv@a
  1837     04F2  120A  118A  22FC  120A  118A  	fcall	___fldiv
  1838     04F7  0838               	movf	?___fldiv+3,w
  1839     04F8  00D2               	movwf	___fltol@f1+3
  1840     04F9  0837               	movf	?___fldiv+2,w
  1841     04FA  00D1               	movwf	___fltol@f1+2
  1842     04FB  0836               	movf	?___fldiv+1,w
  1843     04FC  00D0               	movwf	___fltol@f1+1
  1844     04FD  0835               	movf	?___fldiv,w
  1845     04FE  00CF               	movwf	___fltol@f1
  1846     04FF  120A  118A  253B  120A  118A  	fcall	___fltol
  1847     0504  0850               	movf	?___fltol+1,w
  1848     0505  00DC               	movwf	Position_Control@step+1
  1849     0506  084F               	movf	?___fltol,w
  1850     0507  00DB               	movwf	Position_Control@step
  1851                           
  1852                           ;Bipolar_Stepper.c: 72:     for(uint16_t i = 0; i < step; ++i)
  1853     0508  01DD               	clrf	Position_Control@i
  1854     0509  01DE               	clrf	Position_Control@i+1
  1855     050A                     i1l67:
  1856     050A  085C               	movf	Position_Control@step+1,w
  1857     050B  025E               	subwf	Position_Control@i+1,w
  1858     050C  1D03               	skipz
  1859     050D  2D10               	goto	u191_25
  1860     050E  085B               	movf	Position_Control@step,w
  1861     050F  025D               	subwf	Position_Control@i,w
  1862     0510                     u191_25:
  1863     0510  1803               	btfsc	3,0
  1864     0511  2D33               	goto	i1l1729
  1865                           
  1866                           ;Bipolar_Stepper.c: 73:     {;Bipolar_Stepper.c: 74:         RD2 = 1;
  1867     0512  1508               	bsf	8,2	;volatile
  1868                           
  1869                           ;Bipolar_Stepper.c: 75:         _delay((unsigned long)((500)*(16000000/4000000.0)));
  1870     0513  3003               	movlw	3
  1871     0514  1283               	bcf	3,5	;RP0=0, select bank0
  1872     0515  1303               	bcf	3,6	;RP1=0, select bank0
  1873     0516  00DA               	movwf	??_Position_Control+1
  1874     0517  3097               	movlw	151
  1875     0518  00D9               	movwf	??_Position_Control
  1876     0519                     u217_27:
  1877     0519  0BD9               	decfsz	??_Position_Control,f
  1878     051A  2D19               	goto	u217_27
  1879     051B  0BDA               	decfsz	??_Position_Control+1,f
  1880     051C  2D19               	goto	u217_27
  1881                           
  1882                           ;Bipolar_Stepper.c: 76:         RD2 = 0;
  1883     051D  1283               	bcf	3,5	;RP0=0, select bank0
  1884     051E  1303               	bcf	3,6	;RP1=0, select bank0
  1885     051F  1108               	bcf	8,2	;volatile
  1886                           
  1887                           ;Bipolar_Stepper.c: 77:         _delay((unsigned long)((500)*(16000000/4000000.0)));
  1888     0520  3003               	movlw	3
  1889     0521  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0522  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0523  00DA               	movwf	??_Position_Control+1
  1892     0524  3097               	movlw	151
  1893     0525  00D9               	movwf	??_Position_Control
  1894     0526                     u218_27:
  1895     0526  0BD9               	decfsz	??_Position_Control,f
  1896     0527  2D26               	goto	u218_27
  1897     0528  0BDA               	decfsz	??_Position_Control+1,f
  1898     0529  2D26               	goto	u218_27
  1899                           
  1900                           ;Bipolar_Stepper.c: 78:     }
  1901     052A  3001               	movlw	1
  1902     052B  1283               	bcf	3,5	;RP0=0, select bank0
  1903     052C  1303               	bcf	3,6	;RP1=0, select bank0
  1904     052D  07DD               	addwf	Position_Control@i,f
  1905     052E  1803               	skipnc
  1906     052F  0ADE               	incf	Position_Control@i+1,f
  1907     0530  3000               	movlw	0
  1908     0531  07DE               	addwf	Position_Control@i+1,f
  1909     0532  2D0A               	goto	i1l67
  1910     0533                     i1l1729:
  1911                           
  1912                           ;Bipolar_Stepper.c: 79:     UART_sendString("Completed\r\n");
  1913     0533  3034               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1914     0534  00F1               	movwf	i1UART_sendString@str
  1915     0535  3080               	movlw	128
  1916     0536  00F2               	movwf	i1UART_sendString@str+1
  1917     0537  120A  118A  2787   	fcall	i1_UART_sendString
  1918     053A  0008               	return
  1919     053B                     __end_of_Position_Control:
  1920                           
  1921                           	psect	text10
  1922     0787                     __ptext10:	
  1923 ;; *************** function i1_UART_sendString *****************
  1924 ;; Defined at:
  1925 ;;		line 42 in file "UART.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  str             2    1[COMMON] PTR unsigned char 
  1928 ;;		 -> STR_4(18), rcvStr(17), STR_2(12), STR_1(18), 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 300/0
  1937 ;;		On exit  : 300/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         2       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0
  1943 ;;      Totals:         2       0       0       0       0
  1944 ;;Total ram usage:        2 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 1
  1947 ;; This function calls:
  1948 ;;		i1_UART_sendChar
  1949 ;; This function is called by:
  1950 ;;		_Position_Control
  1951 ;;		_ISR
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955     0787                     i1_UART_sendString:	
  1956                           ;psect for function i1_UART_sendString
  1957                           
  1958     0787                     i1l1689:	
  1959                           ;UART.c: 42: void UART_sendString(char* str);UART.c: 43: {;UART.c: 44:    while (*str)
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in i1_UART_sendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1963                           
  1964                           
  1965                           ;UART.c: 44:    while (*str)
  1966     0787  0872               	movf	i1UART_sendString@str+1,w
  1967     0788  00FF               	movwf	127
  1968     0789  0871               	movf	i1UART_sendString@str,w
  1969     078A  0084               	movwf	4
  1970     078B  120A  118A  2600  120A  118A  	fcall	stringtab
  1971     0790  3A00               	xorlw	0
  1972     0791  1903               	btfsc	3,2
  1973     0792  0008               	return
  1974                           
  1975                           ;UART.c: 45:    {;UART.c: 46:        UART_sendChar(*str++);
  1976     0793  0872               	movf	i1UART_sendString@str+1,w
  1977     0794  00FF               	movwf	127
  1978     0795  0871               	movf	i1UART_sendString@str,w
  1979     0796  0084               	movwf	4
  1980     0797  120A  118A  2600  120A  118A  	fcall	stringtab
  1981     079C  120A  118A  27D4  120A  118A  	fcall	i1_UART_sendChar
  1982     07A1  3001               	movlw	1
  1983     07A2  07F1               	addwf	i1UART_sendString@str,f
  1984     07A3  1803               	skipnc
  1985     07A4  0AF2               	incf	i1UART_sendString@str+1,f
  1986     07A5  3000               	movlw	0
  1987     07A6  07F2               	addwf	i1UART_sendString@str+1,f
  1988     07A7  2F87               	goto	i1l1689
  1989     07A8                     __end_ofi1_UART_sendString:
  1990                           
  1991                           	psect	text11
  1992     07D4                     __ptext11:	
  1993 ;; *************** function i1_UART_sendChar *****************
  1994 ;; Defined at:
  1995 ;;		line 28 in file "UART.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  data            1    wreg     unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  data            1    0[COMMON] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg
  2004 ;; Tracked objects:
  2005 ;;		On entry : 300/0
  2006 ;;		On exit  : 300/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       0       0       0       0
  2010 ;;      Locals:         1       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0
  2012 ;;      Totals:         1       0       0       0       0
  2013 ;;Total ram usage:        1 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		i1_UART_sendString
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022     07D4                     i1_UART_sendChar:	
  2023                           ;psect for function i1_UART_sendChar
  2024                           
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in i1_UART_sendChar: [wreg]
  2028                           ;i1UART_sendChar@data stored from wreg
  2029     07D4  00F0               	movwf	i1UART_sendChar@data
  2030     07D5                     i1l143:	
  2031                           ;UART.c: 28: void UART_sendChar(char data);UART.c: 29: {;UART.c: 30:    while (!TXIF);
  2032                           
  2033     07D5  1E0C               	btfss	12,4	;volatile
  2034     07D6  2FD5               	goto	i1l143
  2035                           
  2036                           ;UART.c: 31:    TXREG = data;
  2037     07D7  0870               	movf	i1UART_sendChar@data,w
  2038     07D8  0099               	movwf	25	;volatile
  2039     07D9  0008               	return
  2040     07DA                     __end_ofi1_UART_sendChar:
  2041                           
  2042                           	psect	text12
  2043     053B                     __ptext12:	
  2044 ;; *************** function ___fltol *****************
  2045 ;; Defined at:
  2046 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  f1              4   47[BANK0 ] void 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  exp1            1   56[BANK0 ] unsigned char 
  2051 ;;  sign1           1   55[BANK0 ] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  4   47[BANK0 ] long 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, btemp+1
  2056 ;; Tracked objects:
  2057 ;;		On entry : 300/0
  2058 ;;		On exit  : 300/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       4       0       0       0
  2062 ;;      Locals:         0       2       0       0       0
  2063 ;;      Temps:          0       4       0       0       0
  2064 ;;      Totals:         0      10       0       0       0
  2065 ;;Total ram usage:       10 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_Position_Control
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074     053B                     ___fltol:	
  2075                           ;psect for function ___fltol
  2076                           
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  2080     053B  1003               	clrc
  2081     053C  0D51               	rlf	___fltol@f1+2,w
  2082     053D  0D52               	rlf	___fltol@f1+3,w
  2083     053E  00D8               	movwf	___fltol@exp1
  2084     053F  0858               	movf	___fltol@exp1,w
  2085     0540  1D03               	btfss	3,2
  2086     0541  2D4B               	goto	i1l1363
  2087     0542                     i1l1359:
  2088     0542  3000               	movlw	0
  2089     0543  00D2               	movwf	?___fltol+3
  2090     0544  3000               	movlw	0
  2091     0545  00D1               	movwf	?___fltol+2
  2092     0546  3000               	movlw	0
  2093     0547  00D0               	movwf	?___fltol+1
  2094     0548  3000               	movlw	0
  2095     0549  00CF               	movwf	?___fltol
  2096     054A  0008               	return
  2097     054B                     i1l1363:
  2098     054B  084F               	movf	___fltol@f1,w
  2099     054C  00D3               	movwf	??___fltol
  2100     054D  0850               	movf	___fltol@f1+1,w
  2101     054E  00D4               	movwf	??___fltol+1
  2102     054F  0851               	movf	___fltol@f1+2,w
  2103     0550  00D5               	movwf	??___fltol+2
  2104     0551  0852               	movf	___fltol@f1+3,w
  2105     0552  00D6               	movwf	??___fltol+3
  2106     0553  301F               	movlw	31
  2107     0554                     u110_25:
  2108     0554  1003               	clrc
  2109     0555  0CD6               	rrf	??___fltol+3,f
  2110     0556  0CD5               	rrf	??___fltol+2,f
  2111     0557  0CD4               	rrf	??___fltol+1,f
  2112     0558  0CD3               	rrf	??___fltol,f
  2113     0559  3EFF               	addlw	-1
  2114     055A  1D03               	skipz
  2115     055B  2D54               	goto	u110_25
  2116     055C  0853               	movf	??___fltol,w
  2117     055D  00D7               	movwf	___fltol@sign1
  2118     055E  17D1               	bsf	___fltol@f1+2,7
  2119     055F  30FF               	movlw	255
  2120     0560  05CF               	andwf	___fltol@f1,f
  2121     0561  30FF               	movlw	255
  2122     0562  05D0               	andwf	___fltol@f1+1,f
  2123     0563  30FF               	movlw	255
  2124     0564  05D1               	andwf	___fltol@f1+2,f
  2125     0565  3000               	movlw	0
  2126     0566  05D2               	andwf	___fltol@f1+3,f
  2127     0567  3096               	movlw	150
  2128     0568  02D8               	subwf	___fltol@exp1,f
  2129     0569  1FD8               	btfss	___fltol@exp1,7
  2130     056A  2D80               	goto	i1l1383
  2131     056B  0858               	movf	___fltol@exp1,w
  2132     056C  3A80               	xorlw	128
  2133     056D  3E97               	addlw	151
  2134     056E  1C03               	btfss	3,0
  2135     056F  2D42               	goto	i1l1359
  2136     0570                     i1l1379:
  2137     0570  3001               	movlw	1
  2138     0571                     u113_25:
  2139     0571  1003               	clrc
  2140     0572  0CD2               	rrf	___fltol@f1+3,f
  2141     0573  0CD1               	rrf	___fltol@f1+2,f
  2142     0574  0CD0               	rrf	___fltol@f1+1,f
  2143     0575  0CCF               	rrf	___fltol@f1,f
  2144     0576  3EFF               	addlw	-1
  2145     0577  1D03               	skipz
  2146     0578  2D71               	goto	u113_25
  2147     0579  3001               	movlw	1
  2148     057A  00FF               	movwf	127
  2149     057B  087F               	movf	127,w
  2150     057C  07D8               	addwf	___fltol@exp1,f
  2151     057D  1903               	btfsc	3,2
  2152     057E  2D93               	goto	i1l1391
  2153     057F  2D70               	goto	i1l1379
  2154     0580                     i1l1383:
  2155     0580  3020               	movlw	32
  2156     0581  0258               	subwf	___fltol@exp1,w
  2157     0582  1803               	btfsc	3,0
  2158     0583  2D42               	goto	i1l1359
  2159     0584                     i1l460:
  2160     0584  0858               	movf	___fltol@exp1,w
  2161     0585  1903               	btfsc	3,2
  2162     0586  2D93               	goto	i1l1391
  2163     0587  3001               	movlw	1
  2164     0588  00D3               	movwf	??___fltol
  2165     0589                     u116_25:
  2166     0589  1003               	clrc
  2167     058A  0DCF               	rlf	___fltol@f1,f
  2168     058B  0DD0               	rlf	___fltol@f1+1,f
  2169     058C  0DD1               	rlf	___fltol@f1+2,f
  2170     058D  0DD2               	rlf	___fltol@f1+3,f
  2171     058E  0BD3               	decfsz	??___fltol,f
  2172     058F  2D89               	goto	u116_25
  2173     0590  3001               	movlw	1
  2174     0591  02D8               	subwf	___fltol@exp1,f
  2175     0592  2D84               	goto	i1l460
  2176     0593                     i1l1391:
  2177     0593  0857               	movf	___fltol@sign1,w
  2178     0594  1903               	btfsc	3,2
  2179     0595  0008               	return
  2180     0596  09CF               	comf	___fltol@f1,f
  2181     0597  09D0               	comf	___fltol@f1+1,f
  2182     0598  09D1               	comf	___fltol@f1+2,f
  2183     0599  09D2               	comf	___fltol@f1+3,f
  2184     059A  0ACF               	incf	___fltol@f1,f
  2185     059B  1903               	skipnz
  2186     059C  0AD0               	incf	___fltol@f1+1,f
  2187     059D  1903               	skipnz
  2188     059E  0AD1               	incf	___fltol@f1+2,f
  2189     059F  1903               	skipnz
  2190     05A0  0AD2               	incf	___fltol@f1+3,f
  2191     05A1  0008               	return
  2192     05A2                     __end_of___fltol:
  2193                           
  2194                           	psect	text13
  2195     0023                     __ptext13:	
  2196 ;; *************** function ___flmul *****************
  2197 ;; Defined at:
  2198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  b               4    0[BANK0 ] long 
  2201 ;;  a               4    4[BANK0 ] long 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  prod            4   15[BANK0 ] struct .
  2204 ;;  grs             4   10[BANK0 ] unsigned long 
  2205 ;;  temp            2   19[BANK0 ] struct .
  2206 ;;  bexp            1   14[BANK0 ] unsigned char 
  2207 ;;  aexp            1    9[BANK0 ] unsigned char 
  2208 ;;  sign            1    8[BANK0 ] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  4    0[BANK0 ] unsigned char 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 300/0
  2215 ;;		On exit  : 300/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       8       0       0       0
  2219 ;;      Locals:         0      13       0       0       0
  2220 ;;      Temps:          5       0       0       0       0
  2221 ;;      Totals:         5      21       0       0       0
  2222 ;;Total ram usage:       26 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 1
  2225 ;; This function calls:
  2226 ;;		__Umul8_16
  2227 ;; This function is called by:
  2228 ;;		_Position_Control
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232     0023                     ___flmul:	
  2233                           ;psect for function ___flmul
  2234                           
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2238     0023  0823               	movf	___flmul@b+3,w
  2239     0024  3980               	andlw	128
  2240     0025  00A8               	movwf	___flmul@sign
  2241     0026  0823               	movf	___flmul@b+3,w
  2242     0027  00F9               	movwf	??___flmul
  2243     0028  0779               	addwf	??___flmul,w
  2244     0029  00AE               	movwf	___flmul@bexp
  2245     002A  1BA2               	btfsc	___flmul@b+2,7
  2246     002B  142E               	bsf	___flmul@bexp,0
  2247     002C  082E               	movf	___flmul@bexp,w
  2248     002D  1903               	btfsc	3,2
  2249     002E  283C               	goto	i1l1557
  2250     002F  0A2E               	incf	___flmul@bexp,w
  2251     0030  1D03               	btfss	3,2
  2252     0031  283A               	goto	i1l1555
  2253     0032  3000               	movlw	0
  2254     0033  00A3               	movwf	___flmul@b+3
  2255     0034  3000               	movlw	0
  2256     0035  00A2               	movwf	___flmul@b+2
  2257     0036  3000               	movlw	0
  2258     0037  00A1               	movwf	___flmul@b+1
  2259     0038  3000               	movlw	0
  2260     0039  00A0               	movwf	___flmul@b
  2261     003A                     i1l1555:
  2262     003A  17A2               	bsf	___flmul@b+2,7
  2263     003B  2844               	goto	i1l1559
  2264     003C                     i1l1557:
  2265     003C  3000               	movlw	0
  2266     003D  00A3               	movwf	___flmul@b+3
  2267     003E  3000               	movlw	0
  2268     003F  00A2               	movwf	___flmul@b+2
  2269     0040  3000               	movlw	0
  2270     0041  00A1               	movwf	___flmul@b+1
  2271     0042  3000               	movlw	0
  2272     0043  00A0               	movwf	___flmul@b
  2273     0044                     i1l1559:
  2274     0044  0827               	movf	___flmul@a+3,w
  2275     0045  3980               	andlw	128
  2276     0046  00FF               	movwf	127
  2277     0047  087F               	movf	127,w
  2278     0048  06A8               	xorwf	___flmul@sign,f
  2279     0049  0827               	movf	___flmul@a+3,w
  2280     004A  00F9               	movwf	??___flmul
  2281     004B  0779               	addwf	??___flmul,w
  2282     004C  00A9               	movwf	___flmul@aexp
  2283     004D  1BA6               	btfsc	___flmul@a+2,7
  2284     004E  1429               	bsf	___flmul@aexp,0
  2285     004F  0829               	movf	___flmul@aexp,w
  2286     0050  1903               	btfsc	3,2
  2287     0051  285F               	goto	i1l1575
  2288     0052  0A29               	incf	___flmul@aexp,w
  2289     0053  1D03               	btfss	3,2
  2290     0054  285D               	goto	i1l1573
  2291     0055  3000               	movlw	0
  2292     0056  00A7               	movwf	___flmul@a+3
  2293     0057  3000               	movlw	0
  2294     0058  00A6               	movwf	___flmul@a+2
  2295     0059  3000               	movlw	0
  2296     005A  00A5               	movwf	___flmul@a+1
  2297     005B  3000               	movlw	0
  2298     005C  00A4               	movwf	___flmul@a
  2299     005D                     i1l1573:
  2300     005D  17A6               	bsf	___flmul@a+2,7
  2301     005E  2867               	goto	i1l1577
  2302     005F                     i1l1575:
  2303     005F  3000               	movlw	0
  2304     0060  00A7               	movwf	___flmul@a+3
  2305     0061  3000               	movlw	0
  2306     0062  00A6               	movwf	___flmul@a+2
  2307     0063  3000               	movlw	0
  2308     0064  00A5               	movwf	___flmul@a+1
  2309     0065  3000               	movlw	0
  2310     0066  00A4               	movwf	___flmul@a
  2311     0067                     i1l1577:
  2312     0067  0829               	movf	___flmul@aexp,w
  2313     0068  1D03               	btfss	3,2
  2314     0069  082E               	movf	___flmul@bexp,w
  2315     006A  1D03               	btfss	3,2
  2316     006B  2875               	goto	i1l1585
  2317     006C  3000               	movlw	0
  2318     006D  00A3               	movwf	?___flmul+3
  2319     006E  3000               	movlw	0
  2320     006F  00A2               	movwf	?___flmul+2
  2321     0070  3000               	movlw	0
  2322     0071  00A1               	movwf	?___flmul+1
  2323     0072  3000               	movlw	0
  2324     0073  00A0               	movwf	?___flmul
  2325     0074  0008               	return
  2326     0075                     i1l1585:
  2327     0075  0820               	movf	___flmul@b,w
  2328     0076  00F0               	movwf	__Umul8_16@multiplicand
  2329     0077  0826               	movf	___flmul@a+2,w
  2330     0078  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2331     007D  0871               	movf	?__Umul8_16+1,w
  2332     007E  00B4               	movwf	___flmul@temp+1
  2333     007F  0870               	movf	?__Umul8_16,w
  2334     0080  00B3               	movwf	___flmul@temp
  2335     0081  0833               	movf	___flmul@temp,w
  2336     0082  00F9               	movwf	??___flmul
  2337     0083  01FA               	clrf	??___flmul+1
  2338     0084  01FB               	clrf	??___flmul+2
  2339     0085  01FC               	clrf	??___flmul+3
  2340     0086  087C               	movf	??___flmul+3,w
  2341     0087  00AD               	movwf	___flmul@grs+3
  2342     0088  087B               	movf	??___flmul+2,w
  2343     0089  00AC               	movwf	___flmul@grs+2
  2344     008A  087A               	movf	??___flmul+1,w
  2345     008B  00AB               	movwf	___flmul@grs+1
  2346     008C  0879               	movf	??___flmul,w
  2347     008D  00AA               	movwf	___flmul@grs
  2348     008E  0834               	movf	___flmul@temp+1,w
  2349     008F  00F9               	movwf	??___flmul
  2350     0090  01FA               	clrf	??___flmul+1
  2351     0091  01FB               	clrf	??___flmul+2
  2352     0092  01FC               	clrf	??___flmul+3
  2353     0093  087C               	movf	??___flmul+3,w
  2354     0094  00B2               	movwf	___flmul@prod+3
  2355     0095  087B               	movf	??___flmul+2,w
  2356     0096  00B1               	movwf	___flmul@prod+2
  2357     0097  087A               	movf	??___flmul+1,w
  2358     0098  00B0               	movwf	___flmul@prod+1
  2359     0099  0879               	movf	??___flmul,w
  2360     009A  00AF               	movwf	___flmul@prod
  2361     009B  0821               	movf	___flmul@b+1,w
  2362     009C  00F0               	movwf	__Umul8_16@multiplicand
  2363     009D  0825               	movf	___flmul@a+1,w
  2364     009E  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2365     00A3  0871               	movf	?__Umul8_16+1,w
  2366     00A4  00B4               	movwf	___flmul@temp+1
  2367     00A5  0870               	movf	?__Umul8_16,w
  2368     00A6  00B3               	movwf	___flmul@temp
  2369     00A7  0833               	movf	___flmul@temp,w
  2370     00A8  00F9               	movwf	??___flmul
  2371     00A9  01FA               	clrf	??___flmul+1
  2372     00AA  01FB               	clrf	??___flmul+2
  2373     00AB  01FC               	clrf	??___flmul+3
  2374     00AC  0879               	movf	??___flmul,w
  2375     00AD  07AA               	addwf	___flmul@grs,f
  2376     00AE  087A               	movf	??___flmul+1,w
  2377     00AF  1103               	clrz
  2378     00B0  1803               	skipnc
  2379     00B1  3E01               	addlw	1
  2380     00B2  1D03               	btfss	3,2
  2381     00B3  07AB               	addwf	___flmul@grs+1,f
  2382     00B4  087B               	movf	??___flmul+2,w
  2383     00B5  1103               	clrz
  2384     00B6  1803               	skipnc
  2385     00B7  3E01               	addlw	1
  2386     00B8  1D03               	btfss	3,2
  2387     00B9  07AC               	addwf	___flmul@grs+2,f
  2388     00BA  087C               	movf	??___flmul+3,w
  2389     00BB  1103               	clrz
  2390     00BC  1803               	skipnc
  2391     00BD  3E01               	addlw	1
  2392     00BE  1D03               	btfss	3,2
  2393     00BF  07AD               	addwf	___flmul@grs+3,f
  2394     00C0  0834               	movf	___flmul@temp+1,w
  2395     00C1  00F9               	movwf	??___flmul
  2396     00C2  01FA               	clrf	??___flmul+1
  2397     00C3  01FB               	clrf	??___flmul+2
  2398     00C4  01FC               	clrf	??___flmul+3
  2399     00C5  0879               	movf	??___flmul,w
  2400     00C6  07AF               	addwf	___flmul@prod,f
  2401     00C7  087A               	movf	??___flmul+1,w
  2402     00C8  1103               	clrz
  2403     00C9  1803               	skipnc
  2404     00CA  3E01               	addlw	1
  2405     00CB  1D03               	btfss	3,2
  2406     00CC  07B0               	addwf	___flmul@prod+1,f
  2407     00CD  087B               	movf	??___flmul+2,w
  2408     00CE  1103               	clrz
  2409     00CF  1803               	skipnc
  2410     00D0  3E01               	addlw	1
  2411     00D1  1D03               	btfss	3,2
  2412     00D2  07B1               	addwf	___flmul@prod+2,f
  2413     00D3  087C               	movf	??___flmul+3,w
  2414     00D4  1103               	clrz
  2415     00D5  1803               	skipnc
  2416     00D6  3E01               	addlw	1
  2417     00D7  1D03               	btfss	3,2
  2418     00D8  07B2               	addwf	___flmul@prod+3,f
  2419     00D9  0822               	movf	___flmul@b+2,w
  2420     00DA  00F0               	movwf	__Umul8_16@multiplicand
  2421     00DB  0824               	movf	___flmul@a,w
  2422     00DC  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2423     00E1  0871               	movf	?__Umul8_16+1,w
  2424     00E2  00B4               	movwf	___flmul@temp+1
  2425     00E3  0870               	movf	?__Umul8_16,w
  2426     00E4  00B3               	movwf	___flmul@temp
  2427     00E5  0833               	movf	___flmul@temp,w
  2428     00E6  00F9               	movwf	??___flmul
  2429     00E7  01FA               	clrf	??___flmul+1
  2430     00E8  01FB               	clrf	??___flmul+2
  2431     00E9  01FC               	clrf	??___flmul+3
  2432     00EA  0879               	movf	??___flmul,w
  2433     00EB  07AA               	addwf	___flmul@grs,f
  2434     00EC  087A               	movf	??___flmul+1,w
  2435     00ED  1103               	clrz
  2436     00EE  1803               	skipnc
  2437     00EF  3E01               	addlw	1
  2438     00F0  1D03               	btfss	3,2
  2439     00F1  07AB               	addwf	___flmul@grs+1,f
  2440     00F2  087B               	movf	??___flmul+2,w
  2441     00F3  1103               	clrz
  2442     00F4  1803               	skipnc
  2443     00F5  3E01               	addlw	1
  2444     00F6  1D03               	btfss	3,2
  2445     00F7  07AC               	addwf	___flmul@grs+2,f
  2446     00F8  087C               	movf	??___flmul+3,w
  2447     00F9  1103               	clrz
  2448     00FA  1803               	skipnc
  2449     00FB  3E01               	addlw	1
  2450     00FC  1D03               	btfss	3,2
  2451     00FD  07AD               	addwf	___flmul@grs+3,f
  2452     00FE  0834               	movf	___flmul@temp+1,w
  2453     00FF  00F9               	movwf	??___flmul
  2454     0100  01FA               	clrf	??___flmul+1
  2455     0101  01FB               	clrf	??___flmul+2
  2456     0102  01FC               	clrf	??___flmul+3
  2457     0103  0879               	movf	??___flmul,w
  2458     0104  07AF               	addwf	___flmul@prod,f
  2459     0105  087A               	movf	??___flmul+1,w
  2460     0106  1103               	clrz
  2461     0107  1803               	skipnc
  2462     0108  3E01               	addlw	1
  2463     0109  1D03               	btfss	3,2
  2464     010A  07B0               	addwf	___flmul@prod+1,f
  2465     010B  087B               	movf	??___flmul+2,w
  2466     010C  1103               	clrz
  2467     010D  1803               	skipnc
  2468     010E  3E01               	addlw	1
  2469     010F  1D03               	btfss	3,2
  2470     0110  07B1               	addwf	___flmul@prod+2,f
  2471     0111  087C               	movf	??___flmul+3,w
  2472     0112  1103               	clrz
  2473     0113  1803               	skipnc
  2474     0114  3E01               	addlw	1
  2475     0115  1D03               	btfss	3,2
  2476     0116  07B2               	addwf	___flmul@prod+3,f
  2477     0117  3008               	movlw	8
  2478     0118  00F9               	movwf	??___flmul
  2479     0119                     u160_25:
  2480     0119  1003               	clrc
  2481     011A  0DAA               	rlf	___flmul@grs,f
  2482     011B  0DAB               	rlf	___flmul@grs+1,f
  2483     011C  0DAC               	rlf	___flmul@grs+2,f
  2484     011D  0DAD               	rlf	___flmul@grs+3,f
  2485     011E  0BF9               	decfsz	??___flmul,f
  2486     011F  2919               	goto	u160_25
  2487     0120  0821               	movf	___flmul@b+1,w
  2488     0121  00F0               	movwf	__Umul8_16@multiplicand
  2489     0122  0824               	movf	___flmul@a,w
  2490     0123  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2491     0128  0871               	movf	?__Umul8_16+1,w
  2492     0129  00B4               	movwf	___flmul@temp+1
  2493     012A  0870               	movf	?__Umul8_16,w
  2494     012B  00B3               	movwf	___flmul@temp
  2495     012C  0833               	movf	___flmul@temp,w
  2496     012D  00F9               	movwf	??___flmul
  2497     012E  0834               	movf	___flmul@temp+1,w
  2498     012F  00FA               	movwf	??___flmul+1
  2499     0130  01FB               	clrf	??___flmul+2
  2500     0131  01FC               	clrf	??___flmul+3
  2501     0132  0879               	movf	??___flmul,w
  2502     0133  07AA               	addwf	___flmul@grs,f
  2503     0134  087A               	movf	??___flmul+1,w
  2504     0135  1103               	clrz
  2505     0136  1803               	skipnc
  2506     0137  3E01               	addlw	1
  2507     0138  1D03               	btfss	3,2
  2508     0139  07AB               	addwf	___flmul@grs+1,f
  2509     013A  087B               	movf	??___flmul+2,w
  2510     013B  1103               	clrz
  2511     013C  1803               	skipnc
  2512     013D  3E01               	addlw	1
  2513     013E  1D03               	btfss	3,2
  2514     013F  07AC               	addwf	___flmul@grs+2,f
  2515     0140  087C               	movf	??___flmul+3,w
  2516     0141  1103               	clrz
  2517     0142  1803               	skipnc
  2518     0143  3E01               	addlw	1
  2519     0144  1D03               	btfss	3,2
  2520     0145  07AD               	addwf	___flmul@grs+3,f
  2521     0146  0820               	movf	___flmul@b,w
  2522     0147  00F0               	movwf	__Umul8_16@multiplicand
  2523     0148  0825               	movf	___flmul@a+1,w
  2524     0149  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2525     014E  0871               	movf	?__Umul8_16+1,w
  2526     014F  00B4               	movwf	___flmul@temp+1
  2527     0150  0870               	movf	?__Umul8_16,w
  2528     0151  00B3               	movwf	___flmul@temp
  2529     0152  0833               	movf	___flmul@temp,w
  2530     0153  00F9               	movwf	??___flmul
  2531     0154  0834               	movf	___flmul@temp+1,w
  2532     0155  00FA               	movwf	??___flmul+1
  2533     0156  01FB               	clrf	??___flmul+2
  2534     0157  01FC               	clrf	??___flmul+3
  2535     0158  0879               	movf	??___flmul,w
  2536     0159  07AA               	addwf	___flmul@grs,f
  2537     015A  087A               	movf	??___flmul+1,w
  2538     015B  1103               	clrz
  2539     015C  1803               	skipnc
  2540     015D  3E01               	addlw	1
  2541     015E  1D03               	btfss	3,2
  2542     015F  07AB               	addwf	___flmul@grs+1,f
  2543     0160  087B               	movf	??___flmul+2,w
  2544     0161  1103               	clrz
  2545     0162  1803               	skipnc
  2546     0163  3E01               	addlw	1
  2547     0164  1D03               	btfss	3,2
  2548     0165  07AC               	addwf	___flmul@grs+2,f
  2549     0166  087C               	movf	??___flmul+3,w
  2550     0167  1103               	clrz
  2551     0168  1803               	skipnc
  2552     0169  3E01               	addlw	1
  2553     016A  1D03               	btfss	3,2
  2554     016B  07AD               	addwf	___flmul@grs+3,f
  2555     016C  3008               	movlw	8
  2556     016D  00F9               	movwf	??___flmul
  2557     016E                     u163_25:
  2558     016E  1003               	clrc
  2559     016F  0DAA               	rlf	___flmul@grs,f
  2560     0170  0DAB               	rlf	___flmul@grs+1,f
  2561     0171  0DAC               	rlf	___flmul@grs+2,f
  2562     0172  0DAD               	rlf	___flmul@grs+3,f
  2563     0173  0BF9               	decfsz	??___flmul,f
  2564     0174  296E               	goto	u163_25
  2565     0175  0820               	movf	___flmul@b,w
  2566     0176  00F0               	movwf	__Umul8_16@multiplicand
  2567     0177  0824               	movf	___flmul@a,w
  2568     0178  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2569     017D  0871               	movf	?__Umul8_16+1,w
  2570     017E  00B4               	movwf	___flmul@temp+1
  2571     017F  0870               	movf	?__Umul8_16,w
  2572     0180  00B3               	movwf	___flmul@temp
  2573     0181  0833               	movf	___flmul@temp,w
  2574     0182  00F9               	movwf	??___flmul
  2575     0183  0834               	movf	___flmul@temp+1,w
  2576     0184  00FA               	movwf	??___flmul+1
  2577     0185  01FB               	clrf	??___flmul+2
  2578     0186  01FC               	clrf	??___flmul+3
  2579     0187  0879               	movf	??___flmul,w
  2580     0188  07AA               	addwf	___flmul@grs,f
  2581     0189  087A               	movf	??___flmul+1,w
  2582     018A  1103               	clrz
  2583     018B  1803               	skipnc
  2584     018C  3E01               	addlw	1
  2585     018D  1D03               	btfss	3,2
  2586     018E  07AB               	addwf	___flmul@grs+1,f
  2587     018F  087B               	movf	??___flmul+2,w
  2588     0190  1103               	clrz
  2589     0191  1803               	skipnc
  2590     0192  3E01               	addlw	1
  2591     0193  1D03               	btfss	3,2
  2592     0194  07AC               	addwf	___flmul@grs+2,f
  2593     0195  087C               	movf	??___flmul+3,w
  2594     0196  1103               	clrz
  2595     0197  1803               	skipnc
  2596     0198  3E01               	addlw	1
  2597     0199  1D03               	btfss	3,2
  2598     019A  07AD               	addwf	___flmul@grs+3,f
  2599     019B  0821               	movf	___flmul@b+1,w
  2600     019C  00F0               	movwf	__Umul8_16@multiplicand
  2601     019D  0826               	movf	___flmul@a+2,w
  2602     019E  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2603     01A3  0871               	movf	?__Umul8_16+1,w
  2604     01A4  00B4               	movwf	___flmul@temp+1
  2605     01A5  0870               	movf	?__Umul8_16,w
  2606     01A6  00B3               	movwf	___flmul@temp
  2607     01A7  0833               	movf	___flmul@temp,w
  2608     01A8  00F9               	movwf	??___flmul
  2609     01A9  0834               	movf	___flmul@temp+1,w
  2610     01AA  00FA               	movwf	??___flmul+1
  2611     01AB  01FB               	clrf	??___flmul+2
  2612     01AC  01FC               	clrf	??___flmul+3
  2613     01AD  0879               	movf	??___flmul,w
  2614     01AE  07AF               	addwf	___flmul@prod,f
  2615     01AF  087A               	movf	??___flmul+1,w
  2616     01B0  1103               	clrz
  2617     01B1  1803               	skipnc
  2618     01B2  3E01               	addlw	1
  2619     01B3  1D03               	btfss	3,2
  2620     01B4  07B0               	addwf	___flmul@prod+1,f
  2621     01B5  087B               	movf	??___flmul+2,w
  2622     01B6  1103               	clrz
  2623     01B7  1803               	skipnc
  2624     01B8  3E01               	addlw	1
  2625     01B9  1D03               	btfss	3,2
  2626     01BA  07B1               	addwf	___flmul@prod+2,f
  2627     01BB  087C               	movf	??___flmul+3,w
  2628     01BC  1103               	clrz
  2629     01BD  1803               	skipnc
  2630     01BE  3E01               	addlw	1
  2631     01BF  1D03               	btfss	3,2
  2632     01C0  07B2               	addwf	___flmul@prod+3,f
  2633     01C1  0822               	movf	___flmul@b+2,w
  2634     01C2  00F0               	movwf	__Umul8_16@multiplicand
  2635     01C3  0825               	movf	___flmul@a+1,w
  2636     01C4  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2637     01C9  0871               	movf	?__Umul8_16+1,w
  2638     01CA  00B4               	movwf	___flmul@temp+1
  2639     01CB  0870               	movf	?__Umul8_16,w
  2640     01CC  00B3               	movwf	___flmul@temp
  2641     01CD  0833               	movf	___flmul@temp,w
  2642     01CE  00F9               	movwf	??___flmul
  2643     01CF  0834               	movf	___flmul@temp+1,w
  2644     01D0  00FA               	movwf	??___flmul+1
  2645     01D1  01FB               	clrf	??___flmul+2
  2646     01D2  01FC               	clrf	??___flmul+3
  2647     01D3  0879               	movf	??___flmul,w
  2648     01D4  07AF               	addwf	___flmul@prod,f
  2649     01D5  087A               	movf	??___flmul+1,w
  2650     01D6  1103               	clrz
  2651     01D7  1803               	skipnc
  2652     01D8  3E01               	addlw	1
  2653     01D9  1D03               	btfss	3,2
  2654     01DA  07B0               	addwf	___flmul@prod+1,f
  2655     01DB  087B               	movf	??___flmul+2,w
  2656     01DC  1103               	clrz
  2657     01DD  1803               	skipnc
  2658     01DE  3E01               	addlw	1
  2659     01DF  1D03               	btfss	3,2
  2660     01E0  07B1               	addwf	___flmul@prod+2,f
  2661     01E1  087C               	movf	??___flmul+3,w
  2662     01E2  1103               	clrz
  2663     01E3  1803               	skipnc
  2664     01E4  3E01               	addlw	1
  2665     01E5  1D03               	btfss	3,2
  2666     01E6  07B2               	addwf	___flmul@prod+3,f
  2667     01E7  0822               	movf	___flmul@b+2,w
  2668     01E8  00F0               	movwf	__Umul8_16@multiplicand
  2669     01E9  0826               	movf	___flmul@a+2,w
  2670     01EA  120A  118A  2764  120A  118A  	fcall	__Umul8_16
  2671     01EF  0871               	movf	?__Umul8_16+1,w
  2672     01F0  00B4               	movwf	___flmul@temp+1
  2673     01F1  0870               	movf	?__Umul8_16,w
  2674     01F2  00B3               	movwf	___flmul@temp
  2675     01F3  0833               	movf	___flmul@temp,w
  2676     01F4  00F9               	movwf	??___flmul
  2677     01F5  0834               	movf	___flmul@temp+1,w
  2678     01F6  00FA               	movwf	??___flmul+1
  2679     01F7  01FB               	clrf	??___flmul+2
  2680     01F8  01FC               	clrf	??___flmul+3
  2681     01F9  3008               	movlw	8
  2682     01FA                     u167_25:
  2683     01FA  1003               	clrc
  2684     01FB  0DF9               	rlf	??___flmul,f
  2685     01FC  0DFA               	rlf	??___flmul+1,f
  2686     01FD  0DFB               	rlf	??___flmul+2,f
  2687     01FE  0DFC               	rlf	??___flmul+3,f
  2688     01FF  3EFF               	addlw	-1
  2689     0200  1D03               	skipz
  2690     0201  29FA               	goto	u167_25
  2691     0202  0879               	movf	??___flmul,w
  2692     0203  07AF               	addwf	___flmul@prod,f
  2693     0204  087A               	movf	??___flmul+1,w
  2694     0205  1103               	clrz
  2695     0206  1803               	skipnc
  2696     0207  3E01               	addlw	1
  2697     0208  1D03               	btfss	3,2
  2698     0209  07B0               	addwf	___flmul@prod+1,f
  2699     020A  087B               	movf	??___flmul+2,w
  2700     020B  1103               	clrz
  2701     020C  1803               	skipnc
  2702     020D  3E01               	addlw	1
  2703     020E  1D03               	btfss	3,2
  2704     020F  07B1               	addwf	___flmul@prod+2,f
  2705     0210  087C               	movf	??___flmul+3,w
  2706     0211  1103               	clrz
  2707     0212  1803               	skipnc
  2708     0213  3E01               	addlw	1
  2709     0214  1D03               	btfss	3,2
  2710     0215  07B2               	addwf	___flmul@prod+3,f
  2711     0216  082D               	movf	___flmul@grs+3,w
  2712     0217  00F9               	movwf	??___flmul
  2713     0218  01FA               	clrf	??___flmul+1
  2714     0219  01FB               	clrf	??___flmul+2
  2715     021A  01FC               	clrf	??___flmul+3
  2716     021B  0879               	movf	??___flmul,w
  2717     021C  07AF               	addwf	___flmul@prod,f
  2718     021D  087A               	movf	??___flmul+1,w
  2719     021E  1103               	clrz
  2720     021F  1803               	skipnc
  2721     0220  3E01               	addlw	1
  2722     0221  1D03               	btfss	3,2
  2723     0222  07B0               	addwf	___flmul@prod+1,f
  2724     0223  087B               	movf	??___flmul+2,w
  2725     0224  1103               	clrz
  2726     0225  1803               	skipnc
  2727     0226  3E01               	addlw	1
  2728     0227  1D03               	btfss	3,2
  2729     0228  07B1               	addwf	___flmul@prod+2,f
  2730     0229  087C               	movf	??___flmul+3,w
  2731     022A  1103               	clrz
  2732     022B  1803               	skipnc
  2733     022C  3E01               	addlw	1
  2734     022D  1D03               	btfss	3,2
  2735     022E  07B2               	addwf	___flmul@prod+3,f
  2736     022F  3008               	movlw	8
  2737     0230  00F9               	movwf	??___flmul
  2738     0231                     u170_25:
  2739     0231  1003               	clrc
  2740     0232  0DAA               	rlf	___flmul@grs,f
  2741     0233  0DAB               	rlf	___flmul@grs+1,f
  2742     0234  0DAC               	rlf	___flmul@grs+2,f
  2743     0235  0DAD               	rlf	___flmul@grs+3,f
  2744     0236  0BF9               	decfsz	??___flmul,f
  2745     0237  2A31               	goto	u170_25
  2746     0238  082E               	movf	___flmul@bexp,w
  2747     0239  0729               	addwf	___flmul@aexp,w
  2748     023A  00F9               	movwf	??___flmul
  2749     023B  01FA               	clrf	??___flmul+1
  2750     023C  0DFA               	rlf	??___flmul+1,f
  2751     023D  0879               	movf	??___flmul,w
  2752     023E  3E82               	addlw	130
  2753     023F  00B3               	movwf	___flmul@temp
  2754     0240  087A               	movf	??___flmul+1,w
  2755     0241  1803               	skipnc
  2756     0242  3E01               	addlw	1
  2757     0243  3EFF               	addlw	255
  2758     0244  00B4               	movwf	___flmul@temp+1
  2759     0245                     i1l1637:
  2760     0245  1BB1               	btfsc	___flmul@prod+2,7
  2761     0246  2A62               	goto	i1l1639
  2762     0247  3001               	movlw	1
  2763     0248  00F9               	movwf	??___flmul
  2764     0249                     u171_25:
  2765     0249  1003               	clrc
  2766     024A  0DAF               	rlf	___flmul@prod,f
  2767     024B  0DB0               	rlf	___flmul@prod+1,f
  2768     024C  0DB1               	rlf	___flmul@prod+2,f
  2769     024D  0DB2               	rlf	___flmul@prod+3,f
  2770     024E  0BF9               	decfsz	??___flmul,f
  2771     024F  2A49               	goto	u171_25
  2772     0250  1BAD               	btfsc	___flmul@grs+3,7
  2773     0251  142F               	bsf	___flmul@prod,0
  2774     0252  3001               	movlw	1
  2775     0253  00F9               	movwf	??___flmul
  2776     0254                     u173_25:
  2777     0254  1003               	clrc
  2778     0255  0DAA               	rlf	___flmul@grs,f
  2779     0256  0DAB               	rlf	___flmul@grs+1,f
  2780     0257  0DAC               	rlf	___flmul@grs+2,f
  2781     0258  0DAD               	rlf	___flmul@grs+3,f
  2782     0259  0BF9               	decfsz	??___flmul,f
  2783     025A  2A54               	goto	u173_25
  2784     025B  30FF               	movlw	255
  2785     025C  07B3               	addwf	___flmul@temp,f
  2786     025D  1803               	skipnc
  2787     025E  0AB4               	incf	___flmul@temp+1,f
  2788     025F  30FF               	movlw	255
  2789     0260  07B4               	addwf	___flmul@temp+1,f
  2790     0261  2A45               	goto	i1l1637
  2791     0262                     i1l1639:
  2792     0262  01A9               	clrf	___flmul@aexp
  2793     0263  1FAD               	btfss	___flmul@grs+3,7
  2794     0264  2A7B               	goto	i1l1649
  2795     0265  30FF               	movlw	255
  2796     0266  052A               	andwf	___flmul@grs,w
  2797     0267  00F9               	movwf	??___flmul
  2798     0268  30FF               	movlw	255
  2799     0269  052B               	andwf	___flmul@grs+1,w
  2800     026A  00FA               	movwf	??___flmul+1
  2801     026B  30FF               	movlw	255
  2802     026C  052C               	andwf	___flmul@grs+2,w
  2803     026D  00FB               	movwf	??___flmul+2
  2804     026E  307F               	movlw	127
  2805     026F  052D               	andwf	___flmul@grs+3,w
  2806     0270  00FC               	movwf	??___flmul+3
  2807     0271  087C               	movf	??___flmul+3,w
  2808     0272  047B               	iorwf	??___flmul+2,w
  2809     0273  047A               	iorwf	??___flmul+1,w
  2810     0274  0479               	iorwf	??___flmul,w
  2811     0275  1903               	skipnz
  2812     0276  182F               	btfsc	___flmul@prod,0
  2813     0277  2A79               	goto	i1l1645
  2814     0278  2A7B               	goto	i1l1649
  2815     0279                     i1l1645:
  2816     0279  01A9               	clrf	___flmul@aexp
  2817     027A  0AA9               	incf	___flmul@aexp,f
  2818     027B                     i1l1649:
  2819     027B  0829               	movf	___flmul@aexp,w
  2820     027C  1903               	btfsc	3,2
  2821     027D  2AAD               	goto	i1l1659
  2822     027E  3001               	movlw	1
  2823     027F  07AF               	addwf	___flmul@prod,f
  2824     0280  3000               	movlw	0
  2825     0281  1803               	skipnc
  2826     0282  3001               	movlw	1
  2827     0283  07B0               	addwf	___flmul@prod+1,f
  2828     0284  3000               	movlw	0
  2829     0285  1803               	skipnc
  2830     0286  3001               	movlw	1
  2831     0287  07B1               	addwf	___flmul@prod+2,f
  2832     0288  3000               	movlw	0
  2833     0289  1803               	skipnc
  2834     028A  3001               	movlw	1
  2835     028B  07B2               	addwf	___flmul@prod+3,f
  2836     028C  1C32               	btfss	___flmul@prod+3,0
  2837     028D  2AAD               	goto	i1l1659
  2838     028E  082F               	movf	___flmul@prod,w
  2839     028F  00F9               	movwf	??___flmul
  2840     0290  0830               	movf	___flmul@prod+1,w
  2841     0291  00FA               	movwf	??___flmul+1
  2842     0292  0831               	movf	___flmul@prod+2,w
  2843     0293  00FB               	movwf	??___flmul+2
  2844     0294  0832               	movf	___flmul@prod+3,w
  2845     0295  00FC               	movwf	??___flmul+3
  2846     0296  3001               	movlw	1
  2847     0297  00FD               	movwf	??___flmul+4
  2848     0298                     u180_25:
  2849     0298  0D7C               	rlf	??___flmul+3,w
  2850     0299  0CFC               	rrf	??___flmul+3,f
  2851     029A  0CFB               	rrf	??___flmul+2,f
  2852     029B  0CFA               	rrf	??___flmul+1,f
  2853     029C  0CF9               	rrf	??___flmul,f
  2854     029D  0BFD               	decfsz	??___flmul+4,f
  2855     029E  2A98               	goto	u180_25
  2856     029F  087C               	movf	??___flmul+3,w
  2857     02A0  00B2               	movwf	___flmul@prod+3
  2858     02A1  087B               	movf	??___flmul+2,w
  2859     02A2  00B1               	movwf	___flmul@prod+2
  2860     02A3  087A               	movf	??___flmul+1,w
  2861     02A4  00B0               	movwf	___flmul@prod+1
  2862     02A5  0879               	movf	??___flmul,w
  2863     02A6  00AF               	movwf	___flmul@prod
  2864     02A7  3001               	movlw	1
  2865     02A8  07B3               	addwf	___flmul@temp,f
  2866     02A9  1803               	skipnc
  2867     02AA  0AB4               	incf	___flmul@temp+1,f
  2868     02AB  3000               	movlw	0
  2869     02AC  07B4               	addwf	___flmul@temp+1,f
  2870     02AD                     i1l1659:
  2871     02AD  0834               	movf	___flmul@temp+1,w
  2872     02AE  3A80               	xorlw	128
  2873     02AF  00FF               	movwf	127
  2874     02B0  3080               	movlw	128
  2875     02B1  027F               	subwf	127,w
  2876     02B2  1D03               	skipz
  2877     02B3  2AB6               	goto	u181_25
  2878     02B4  30FF               	movlw	255
  2879     02B5  0233               	subwf	___flmul@temp,w
  2880     02B6                     u181_25:
  2881     02B6  1C03               	skipc
  2882     02B7  2AC3               	goto	i1l1663
  2883     02B8  307F               	movlw	127
  2884     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2885     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2886     02BB  00B2               	movwf	___flmul@prod+3
  2887     02BC  3080               	movlw	128
  2888     02BD  00B1               	movwf	___flmul@prod+2
  2889     02BE  3000               	movlw	0
  2890     02BF  00B0               	movwf	___flmul@prod+1
  2891     02C0  3000               	movlw	0
  2892     02C1  00AF               	movwf	___flmul@prod
  2893     02C2  2AEF               	goto	i1l1677
  2894     02C3                     i1l1663:
  2895     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2896     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2897     02C5  0834               	movf	___flmul@temp+1,w
  2898     02C6  3A80               	xorlw	128
  2899     02C7  00FF               	movwf	127
  2900     02C8  3080               	movlw	128
  2901     02C9  027F               	subwf	127,w
  2902     02CA  1D03               	skipz
  2903     02CB  2ACE               	goto	u182_25
  2904     02CC  3001               	movlw	1
  2905     02CD  0233               	subwf	___flmul@temp,w
  2906     02CE                     u182_25:
  2907     02CE  1803               	skipnc
  2908     02CF  2ADC               	goto	i1l1669
  2909     02D0  3000               	movlw	0
  2910     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2911     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2912     02D3  00B2               	movwf	___flmul@prod+3
  2913     02D4  3000               	movlw	0
  2914     02D5  00B1               	movwf	___flmul@prod+2
  2915     02D6  3000               	movlw	0
  2916     02D7  00B0               	movwf	___flmul@prod+1
  2917     02D8  3000               	movlw	0
  2918     02D9  00AF               	movwf	___flmul@prod
  2919     02DA  01A8               	clrf	___flmul@sign
  2920     02DB  2AEF               	goto	i1l1677
  2921     02DC                     i1l1669:
  2922     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2923     02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2924     02DE  0833               	movf	___flmul@temp,w
  2925     02DF  00AE               	movwf	___flmul@bexp
  2926     02E0  30FF               	movlw	255
  2927     02E1  05AF               	andwf	___flmul@prod,f
  2928     02E2  30FF               	movlw	255
  2929     02E3  05B0               	andwf	___flmul@prod+1,f
  2930     02E4  307F               	movlw	127
  2931     02E5  05B1               	andwf	___flmul@prod+2,f
  2932     02E6  3000               	movlw	0
  2933     02E7  05B2               	andwf	___flmul@prod+3,f
  2934     02E8  182E               	btfsc	___flmul@bexp,0
  2935     02E9  17B1               	bsf	___flmul@prod+2,7
  2936     02EA  082E               	movf	___flmul@bexp,w
  2937     02EB  00F9               	movwf	??___flmul
  2938     02EC  1003               	clrc
  2939     02ED  0C79               	rrf	??___flmul,w
  2940     02EE  00B2               	movwf	___flmul@prod+3
  2941     02EF                     i1l1677:
  2942     02EF  0828               	movf	___flmul@sign,w
  2943     02F0  00FF               	movwf	127
  2944     02F1  087F               	movf	127,w
  2945     02F2  04B2               	iorwf	___flmul@prod+3,f
  2946     02F3  0832               	movf	___flmul@prod+3,w
  2947     02F4  00A3               	movwf	?___flmul+3
  2948     02F5  0831               	movf	___flmul@prod+2,w
  2949     02F6  00A2               	movwf	?___flmul+2
  2950     02F7  0830               	movf	___flmul@prod+1,w
  2951     02F8  00A1               	movwf	?___flmul+1
  2952     02F9  082F               	movf	___flmul@prod,w
  2953     02FA  00A0               	movwf	?___flmul
  2954     02FB  0008               	return
  2955     02FC                     __end_of___flmul:
  2956                           
  2957                           	psect	text14
  2958     0764                     __ptext14:	
  2959 ;; *************** function __Umul8_16 *****************
  2960 ;; Defined at:
  2961 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  multiplier      1    wreg     unsigned char 
  2964 ;;  multiplicand    1    0[COMMON] unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  multiplier      1    8[COMMON] unsigned char 
  2967 ;;  word_mpld       2    6[COMMON] unsigned int 
  2968 ;;  product         2    4[COMMON] unsigned int 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  2    0[COMMON] unsigned int 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 300/0
  2975 ;;		On exit  : 300/0
  2976 ;;		Unchanged: 300/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         2       0       0       0       0
  2979 ;;      Locals:         5       0       0       0       0
  2980 ;;      Temps:          2       0       0       0       0
  2981 ;;      Totals:         9       0       0       0       0
  2982 ;;Total ram usage:        9 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		___flmul
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0764                     __Umul8_16:	
  2992                           ;psect for function __Umul8_16
  2993                           
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2997                           ;__Umul8_16@multiplier stored from wreg
  2998     0764  00F8               	movwf	__Umul8_16@multiplier
  2999     0765  01F4               	clrf	__Umul8_16@product
  3000     0766  01F5               	clrf	__Umul8_16@product+1
  3001     0767  0870               	movf	__Umul8_16@multiplicand,w
  3002     0768  00F2               	movwf	??__Umul8_16
  3003     0769  01F3               	clrf	??__Umul8_16+1
  3004     076A  0872               	movf	??__Umul8_16,w
  3005     076B  00F6               	movwf	__Umul8_16@word_mpld
  3006     076C  0873               	movf	??__Umul8_16+1,w
  3007     076D  00F7               	movwf	__Umul8_16@word_mpld+1
  3008     076E                     i1l1343:
  3009     076E  1C78               	btfss	__Umul8_16@multiplier,0
  3010     076F  2F76               	goto	i1l675
  3011     0770  0876               	movf	__Umul8_16@word_mpld,w
  3012     0771  07F4               	addwf	__Umul8_16@product,f
  3013     0772  1803               	skipnc
  3014     0773  0AF5               	incf	__Umul8_16@product+1,f
  3015     0774  0877               	movf	__Umul8_16@word_mpld+1,w
  3016     0775  07F5               	addwf	__Umul8_16@product+1,f
  3017     0776                     i1l675:
  3018     0776  3001               	movlw	1
  3019     0777                     u106_25:
  3020     0777  1003               	clrc
  3021     0778  0DF6               	rlf	__Umul8_16@word_mpld,f
  3022     0779  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3023     077A  3EFF               	addlw	-1
  3024     077B  1D03               	skipz
  3025     077C  2F77               	goto	u106_25
  3026     077D  1003               	clrc
  3027     077E  0CF8               	rrf	__Umul8_16@multiplier,f
  3028     077F  0878               	movf	__Umul8_16@multiplier,w
  3029     0780  1D03               	btfss	3,2
  3030     0781  2F6E               	goto	i1l1343
  3031     0782  0875               	movf	__Umul8_16@product+1,w
  3032     0783  00F1               	movwf	?__Umul8_16+1
  3033     0784  0874               	movf	__Umul8_16@product,w
  3034     0785  00F0               	movwf	?__Umul8_16
  3035     0786  0008               	return
  3036     0787                     __end_of__Umul8_16:
  3037                           
  3038                           	psect	text15
  3039     02FC                     __ptext15:	
  3040 ;; *************** function ___fldiv *****************
  3041 ;; Defined at:
  3042 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  a               4   21[BANK0 ] unsigned int 
  3045 ;;  b               4   25[BANK0 ] unsigned int 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  grs             4   41[BANK0 ] unsigned long 
  3048 ;;  rem             4   34[BANK0 ] unsigned long 
  3049 ;;  new_exp         2   39[BANK0 ] int 
  3050 ;;  aexp            1   46[BANK0 ] unsigned char 
  3051 ;;  bexp            1   45[BANK0 ] unsigned char 
  3052 ;;  sign            1   38[BANK0 ] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  4   21[BANK0 ] unsigned char 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, btemp+1
  3057 ;; Tracked objects:
  3058 ;;		On entry : 300/0
  3059 ;;		On exit  : 300/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       8       0       0       0
  3063 ;;      Locals:         0      13       0       0       0
  3064 ;;      Temps:          0       5       0       0       0
  3065 ;;      Totals:         0      26       0       0       0
  3066 ;;Total ram usage:       26 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_Position_Control
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     02FC                     ___fldiv:	
  3076                           ;psect for function ___fldiv
  3077                           
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3081     02FC  083C               	movf	___fldiv@b+3,w
  3082     02FD  3980               	andlw	128
  3083     02FE  00C6               	movwf	___fldiv@sign
  3084     02FF  083C               	movf	___fldiv@b+3,w
  3085     0300  00BD               	movwf	??___fldiv
  3086     0301  073D               	addwf	??___fldiv,w
  3087     0302  00CD               	movwf	___fldiv@bexp
  3088     0303  1BBB               	btfsc	___fldiv@b+2,7
  3089     0304  144D               	bsf	___fldiv@bexp,0
  3090     0305  084D               	movf	___fldiv@bexp,w
  3091     0306  1903               	btfsc	3,2
  3092     0307  2B16               	goto	i1l1413
  3093     0308  0A4D               	incf	___fldiv@bexp,w
  3094     0309  1D03               	btfss	3,2
  3095     030A  2B13               	goto	i1l1409
  3096     030B  3000               	movlw	0
  3097     030C  00BC               	movwf	___fldiv@b+3
  3098     030D  3000               	movlw	0
  3099     030E  00BB               	movwf	___fldiv@b+2
  3100     030F  3000               	movlw	0
  3101     0310  00BA               	movwf	___fldiv@b+1
  3102     0311  3000               	movlw	0
  3103     0312  00B9               	movwf	___fldiv@b
  3104     0313                     i1l1409:
  3105     0313  17BB               	bsf	___fldiv@b+2,7
  3106     0314  01BC               	clrf	___fldiv@b+3
  3107     0315  2B1E               	goto	i1l1415
  3108     0316                     i1l1413:
  3109     0316  3000               	movlw	0
  3110     0317  00BC               	movwf	___fldiv@b+3
  3111     0318  3000               	movlw	0
  3112     0319  00BB               	movwf	___fldiv@b+2
  3113     031A  3000               	movlw	0
  3114     031B  00BA               	movwf	___fldiv@b+1
  3115     031C  3000               	movlw	0
  3116     031D  00B9               	movwf	___fldiv@b
  3117     031E                     i1l1415:
  3118     031E  0838               	movf	___fldiv@a+3,w
  3119     031F  3980               	andlw	128
  3120     0320  00FF               	movwf	127
  3121     0321  087F               	movf	127,w
  3122     0322  06C6               	xorwf	___fldiv@sign,f
  3123     0323  0838               	movf	___fldiv@a+3,w
  3124     0324  00BD               	movwf	??___fldiv
  3125     0325  073D               	addwf	??___fldiv,w
  3126     0326  00CE               	movwf	___fldiv@aexp
  3127     0327  1BB7               	btfsc	___fldiv@a+2,7
  3128     0328  144E               	bsf	___fldiv@aexp,0
  3129     0329  084E               	movf	___fldiv@aexp,w
  3130     032A  1903               	btfsc	3,2
  3131     032B  2B3A               	goto	i1l1433
  3132     032C  0A4E               	incf	___fldiv@aexp,w
  3133     032D  1D03               	btfss	3,2
  3134     032E  2B37               	goto	i1l1429
  3135     032F  3000               	movlw	0
  3136     0330  00B8               	movwf	___fldiv@a+3
  3137     0331  3000               	movlw	0
  3138     0332  00B7               	movwf	___fldiv@a+2
  3139     0333  3000               	movlw	0
  3140     0334  00B6               	movwf	___fldiv@a+1
  3141     0335  3000               	movlw	0
  3142     0336  00B5               	movwf	___fldiv@a
  3143     0337                     i1l1429:
  3144     0337  17B7               	bsf	___fldiv@a+2,7
  3145     0338  01B8               	clrf	___fldiv@a+3
  3146     0339  2B42               	goto	i1l616
  3147     033A                     i1l1433:
  3148     033A  3000               	movlw	0
  3149     033B  00B8               	movwf	___fldiv@a+3
  3150     033C  3000               	movlw	0
  3151     033D  00B7               	movwf	___fldiv@a+2
  3152     033E  3000               	movlw	0
  3153     033F  00B6               	movwf	___fldiv@a+1
  3154     0340  3000               	movlw	0
  3155     0341  00B5               	movwf	___fldiv@a
  3156     0342                     i1l616:
  3157     0342  0838               	movf	___fldiv@a+3,w
  3158     0343  0437               	iorwf	___fldiv@a+2,w
  3159     0344  0436               	iorwf	___fldiv@a+1,w
  3160     0345  0435               	iorwf	___fldiv@a,w
  3161     0346  1D03               	skipz
  3162     0347  2B61               	goto	i1l1443
  3163     0348  3000               	movlw	0
  3164     0349  00BC               	movwf	___fldiv@b+3
  3165     034A  3000               	movlw	0
  3166     034B  00BB               	movwf	___fldiv@b+2
  3167     034C  3000               	movlw	0
  3168     034D  00BA               	movwf	___fldiv@b+1
  3169     034E  3000               	movlw	0
  3170     034F  00B9               	movwf	___fldiv@b
  3171     0350  3080               	movlw	128
  3172     0351  04BB               	iorwf	___fldiv@b+2,f
  3173     0352  307F               	movlw	127
  3174     0353  04BC               	iorwf	___fldiv@b+3,f
  3175     0354                     i1l1437:
  3176     0354  0846               	movf	___fldiv@sign,w
  3177     0355  00FF               	movwf	127
  3178     0356  087F               	movf	127,w
  3179     0357  04BC               	iorwf	___fldiv@b+3,f
  3180     0358  083C               	movf	___fldiv@b+3,w
  3181     0359  00B8               	movwf	?___fldiv+3
  3182     035A  083B               	movf	___fldiv@b+2,w
  3183     035B  00B7               	movwf	?___fldiv+2
  3184     035C  083A               	movf	___fldiv@b+1,w
  3185     035D  00B6               	movwf	?___fldiv+1
  3186     035E  0839               	movf	___fldiv@b,w
  3187     035F  00B5               	movwf	?___fldiv
  3188     0360  0008               	return
  3189     0361                     i1l1443:
  3190     0361  084D               	movf	___fldiv@bexp,w
  3191     0362  1D03               	btfss	3,2
  3192     0363  2B6D               	goto	i1l1449
  3193     0364  3000               	movlw	0
  3194     0365  00B8               	movwf	?___fldiv+3
  3195     0366  3000               	movlw	0
  3196     0367  00B7               	movwf	?___fldiv+2
  3197     0368  3000               	movlw	0
  3198     0369  00B6               	movwf	?___fldiv+1
  3199     036A  3000               	movlw	0
  3200     036B  00B5               	movwf	?___fldiv
  3201     036C  0008               	return
  3202     036D                     i1l1449:
  3203     036D  084D               	movf	___fldiv@bexp,w
  3204     036E  00BD               	movwf	??___fldiv
  3205     036F  01BE               	clrf	??___fldiv+1
  3206     0370  083E               	movf	??___fldiv+1,w
  3207     0371  00C0               	movwf	??___fldiv+3
  3208     0372  084E               	movf	___fldiv@aexp,w
  3209     0373  023D               	subwf	??___fldiv,w
  3210     0374  00BF               	movwf	??___fldiv+2
  3211     0375  1C03               	skipc
  3212     0376  03C0               	decf	??___fldiv+3,f
  3213     0377  083F               	movf	??___fldiv+2,w
  3214     0378  3E7F               	addlw	127
  3215     0379  00C7               	movwf	___fldiv@new_exp
  3216     037A  0840               	movf	??___fldiv+3,w
  3217     037B  1803               	skipnc
  3218     037C  3E01               	addlw	1
  3219     037D  3E00               	addlw	0
  3220     037E  00C8               	movwf	___fldiv@new_exp+1
  3221     037F  083C               	movf	___fldiv@b+3,w
  3222     0380  00C5               	movwf	___fldiv@rem+3
  3223     0381  083B               	movf	___fldiv@b+2,w
  3224     0382  00C4               	movwf	___fldiv@rem+2
  3225     0383  083A               	movf	___fldiv@b+1,w
  3226     0384  00C3               	movwf	___fldiv@rem+1
  3227     0385  0839               	movf	___fldiv@b,w
  3228     0386  00C2               	movwf	___fldiv@rem
  3229     0387  3000               	movlw	0
  3230     0388  00BC               	movwf	___fldiv@b+3
  3231     0389  3000               	movlw	0
  3232     038A  00BB               	movwf	___fldiv@b+2
  3233     038B  3000               	movlw	0
  3234     038C  00BA               	movwf	___fldiv@b+1
  3235     038D  3000               	movlw	0
  3236     038E  00B9               	movwf	___fldiv@b
  3237     038F  3000               	movlw	0
  3238     0390  00CC               	movwf	___fldiv@grs+3
  3239     0391  3000               	movlw	0
  3240     0392  00CB               	movwf	___fldiv@grs+2
  3241     0393  3000               	movlw	0
  3242     0394  00CA               	movwf	___fldiv@grs+1
  3243     0395  3000               	movlw	0
  3244     0396  00C9               	movwf	___fldiv@grs
  3245     0397  01CE               	clrf	___fldiv@aexp
  3246     0398                     i1l1477:
  3247     0398  301A               	movlw	26
  3248     0399  024E               	subwf	___fldiv@aexp,w
  3249     039A  1803               	btfsc	3,0
  3250     039B  2BE0               	goto	i1l1479
  3251     039C  084E               	movf	___fldiv@aexp,w
  3252     039D  1903               	btfsc	3,2
  3253     039E  2BBC               	goto	i1l1469
  3254     039F  3001               	movlw	1
  3255     03A0  00BD               	movwf	??___fldiv
  3256     03A1                     u128_25:
  3257     03A1  1003               	clrc
  3258     03A2  0DC2               	rlf	___fldiv@rem,f
  3259     03A3  0DC3               	rlf	___fldiv@rem+1,f
  3260     03A4  0DC4               	rlf	___fldiv@rem+2,f
  3261     03A5  0DC5               	rlf	___fldiv@rem+3,f
  3262     03A6  0BBD               	decfsz	??___fldiv,f
  3263     03A7  2BA1               	goto	u128_25
  3264     03A8  3001               	movlw	1
  3265     03A9  00BD               	movwf	??___fldiv
  3266     03AA                     u129_25:
  3267     03AA  1003               	clrc
  3268     03AB  0DB9               	rlf	___fldiv@b,f
  3269     03AC  0DBA               	rlf	___fldiv@b+1,f
  3270     03AD  0DBB               	rlf	___fldiv@b+2,f
  3271     03AE  0DBC               	rlf	___fldiv@b+3,f
  3272     03AF  0BBD               	decfsz	??___fldiv,f
  3273     03B0  2BAA               	goto	u129_25
  3274     03B1  1BCC               	btfsc	___fldiv@grs+3,7
  3275     03B2  1439               	bsf	___fldiv@b,0
  3276     03B3  3001               	movlw	1
  3277     03B4  00BD               	movwf	??___fldiv
  3278     03B5                     u131_25:
  3279     03B5  1003               	clrc
  3280     03B6  0DC9               	rlf	___fldiv@grs,f
  3281     03B7  0DCA               	rlf	___fldiv@grs+1,f
  3282     03B8  0DCB               	rlf	___fldiv@grs+2,f
  3283     03B9  0DCC               	rlf	___fldiv@grs+3,f
  3284     03BA  0BBD               	decfsz	??___fldiv,f
  3285     03BB  2BB5               	goto	u131_25
  3286     03BC                     i1l1469:
  3287     03BC  0838               	movf	___fldiv@a+3,w
  3288     03BD  0245               	subwf	___fldiv@rem+3,w
  3289     03BE  1D03               	skipz
  3290     03BF  2BCA               	goto	u132_25
  3291     03C0  0837               	movf	___fldiv@a+2,w
  3292     03C1  0244               	subwf	___fldiv@rem+2,w
  3293     03C2  1D03               	skipz
  3294     03C3  2BCA               	goto	u132_25
  3295     03C4  0836               	movf	___fldiv@a+1,w
  3296     03C5  0243               	subwf	___fldiv@rem+1,w
  3297     03C6  1D03               	skipz
  3298     03C7  2BCA               	goto	u132_25
  3299     03C8  0835               	movf	___fldiv@a,w
  3300     03C9  0242               	subwf	___fldiv@rem,w
  3301     03CA                     u132_25:
  3302     03CA  1C03               	skipc
  3303     03CB  2BDB               	goto	i1l1475
  3304     03CC  174C               	bsf	___fldiv@grs+3,6
  3305     03CD  0835               	movf	___fldiv@a,w
  3306     03CE  02C2               	subwf	___fldiv@rem,f
  3307     03CF  0836               	movf	___fldiv@a+1,w
  3308     03D0  1C03               	skipc
  3309     03D1  0F36               	incfsz	___fldiv@a+1,w
  3310     03D2  02C3               	subwf	___fldiv@rem+1,f
  3311     03D3  0837               	movf	___fldiv@a+2,w
  3312     03D4  1C03               	skipc
  3313     03D5  0F37               	incfsz	___fldiv@a+2,w
  3314     03D6  02C4               	subwf	___fldiv@rem+2,f
  3315     03D7  0838               	movf	___fldiv@a+3,w
  3316     03D8  1C03               	skipc
  3317     03D9  0F38               	incfsz	___fldiv@a+3,w
  3318     03DA  02C5               	subwf	___fldiv@rem+3,f
  3319     03DB                     i1l1475:
  3320     03DB  3001               	movlw	1
  3321     03DC  00FF               	movwf	127
  3322     03DD  087F               	movf	127,w
  3323     03DE  07CE               	addwf	___fldiv@aexp,f
  3324     03DF  2B98               	goto	i1l1477
  3325     03E0                     i1l1479:
  3326     03E0  0845               	movf	___fldiv@rem+3,w
  3327     03E1  0444               	iorwf	___fldiv@rem+2,w
  3328     03E2  0443               	iorwf	___fldiv@rem+1,w
  3329     03E3  0442               	iorwf	___fldiv@rem,w
  3330     03E4  1D03               	btfss	3,2
  3331     03E5  1449               	bsf	___fldiv@grs,0
  3332     03E6                     i1l1493:
  3333     03E6  1BBB               	btfsc	___fldiv@b+2,7
  3334     03E7  2C03               	goto	i1l1495
  3335     03E8  3001               	movlw	1
  3336     03E9  00BD               	movwf	??___fldiv
  3337     03EA                     u135_25:
  3338     03EA  1003               	clrc
  3339     03EB  0DB9               	rlf	___fldiv@b,f
  3340     03EC  0DBA               	rlf	___fldiv@b+1,f
  3341     03ED  0DBB               	rlf	___fldiv@b+2,f
  3342     03EE  0DBC               	rlf	___fldiv@b+3,f
  3343     03EF  0BBD               	decfsz	??___fldiv,f
  3344     03F0  2BEA               	goto	u135_25
  3345     03F1  1BCC               	btfsc	___fldiv@grs+3,7
  3346     03F2  1439               	bsf	___fldiv@b,0
  3347     03F3  3001               	movlw	1
  3348     03F4  00BD               	movwf	??___fldiv
  3349     03F5                     u137_25:
  3350     03F5  1003               	clrc
  3351     03F6  0DC9               	rlf	___fldiv@grs,f
  3352     03F7  0DCA               	rlf	___fldiv@grs+1,f
  3353     03F8  0DCB               	rlf	___fldiv@grs+2,f
  3354     03F9  0DCC               	rlf	___fldiv@grs+3,f
  3355     03FA  0BBD               	decfsz	??___fldiv,f
  3356     03FB  2BF5               	goto	u137_25
  3357     03FC  30FF               	movlw	255
  3358     03FD  07C7               	addwf	___fldiv@new_exp,f
  3359     03FE  1803               	skipnc
  3360     03FF  0AC8               	incf	___fldiv@new_exp+1,f
  3361     0400  30FF               	movlw	255
  3362     0401  07C8               	addwf	___fldiv@new_exp+1,f
  3363     0402  2BE6               	goto	i1l1493
  3364     0403                     i1l1495:
  3365     0403  01CE               	clrf	___fldiv@aexp
  3366     0404  1FCC               	btfss	___fldiv@grs+3,7
  3367     0405  2C1C               	goto	i1l1505
  3368     0406  30FF               	movlw	255
  3369     0407  0549               	andwf	___fldiv@grs,w
  3370     0408  00BD               	movwf	??___fldiv
  3371     0409  30FF               	movlw	255
  3372     040A  054A               	andwf	___fldiv@grs+1,w
  3373     040B  00BE               	movwf	??___fldiv+1
  3374     040C  30FF               	movlw	255
  3375     040D  054B               	andwf	___fldiv@grs+2,w
  3376     040E  00BF               	movwf	??___fldiv+2
  3377     040F  307F               	movlw	127
  3378     0410  054C               	andwf	___fldiv@grs+3,w
  3379     0411  00C0               	movwf	??___fldiv+3
  3380     0412  0840               	movf	??___fldiv+3,w
  3381     0413  043F               	iorwf	??___fldiv+2,w
  3382     0414  043E               	iorwf	??___fldiv+1,w
  3383     0415  043D               	iorwf	??___fldiv,w
  3384     0416  1903               	skipnz
  3385     0417  1839               	btfsc	___fldiv@b,0
  3386     0418  2C1A               	goto	i1l1501
  3387     0419  2C1C               	goto	i1l1505
  3388     041A                     i1l1501:
  3389     041A  01CE               	clrf	___fldiv@aexp
  3390     041B  0ACE               	incf	___fldiv@aexp,f
  3391     041C                     i1l1505:
  3392     041C  084E               	movf	___fldiv@aexp,w
  3393     041D  1903               	btfsc	3,2
  3394     041E  2C4E               	goto	i1l1515
  3395     041F  3001               	movlw	1
  3396     0420  07B9               	addwf	___fldiv@b,f
  3397     0421  3000               	movlw	0
  3398     0422  1803               	skipnc
  3399     0423  3001               	movlw	1
  3400     0424  07BA               	addwf	___fldiv@b+1,f
  3401     0425  3000               	movlw	0
  3402     0426  1803               	skipnc
  3403     0427  3001               	movlw	1
  3404     0428  07BB               	addwf	___fldiv@b+2,f
  3405     0429  3000               	movlw	0
  3406     042A  1803               	skipnc
  3407     042B  3001               	movlw	1
  3408     042C  07BC               	addwf	___fldiv@b+3,f
  3409     042D  1C3C               	btfss	___fldiv@b+3,0
  3410     042E  2C4E               	goto	i1l1515
  3411     042F  0839               	movf	___fldiv@b,w
  3412     0430  00BD               	movwf	??___fldiv
  3413     0431  083A               	movf	___fldiv@b+1,w
  3414     0432  00BE               	movwf	??___fldiv+1
  3415     0433  083B               	movf	___fldiv@b+2,w
  3416     0434  00BF               	movwf	??___fldiv+2
  3417     0435  083C               	movf	___fldiv@b+3,w
  3418     0436  00C0               	movwf	??___fldiv+3
  3419     0437  3001               	movlw	1
  3420     0438  00C1               	movwf	??___fldiv+4
  3421     0439                     u144_25:
  3422     0439  0D40               	rlf	??___fldiv+3,w
  3423     043A  0CC0               	rrf	??___fldiv+3,f
  3424     043B  0CBF               	rrf	??___fldiv+2,f
  3425     043C  0CBE               	rrf	??___fldiv+1,f
  3426     043D  0CBD               	rrf	??___fldiv,f
  3427     043E  0BC1               	decfsz	??___fldiv+4,f
  3428     043F  2C39               	goto	u144_25
  3429     0440  0840               	movf	??___fldiv+3,w
  3430     0441  00BC               	movwf	___fldiv@b+3
  3431     0442  083F               	movf	??___fldiv+2,w
  3432     0443  00BB               	movwf	___fldiv@b+2
  3433     0444  083E               	movf	??___fldiv+1,w
  3434     0445  00BA               	movwf	___fldiv@b+1
  3435     0446  083D               	movf	??___fldiv,w
  3436     0447  00B9               	movwf	___fldiv@b
  3437     0448  3001               	movlw	1
  3438     0449  07C7               	addwf	___fldiv@new_exp,f
  3439     044A  1803               	skipnc
  3440     044B  0AC8               	incf	___fldiv@new_exp+1,f
  3441     044C  3000               	movlw	0
  3442     044D  07C8               	addwf	___fldiv@new_exp+1,f
  3443     044E                     i1l1515:
  3444     044E  0848               	movf	___fldiv@new_exp+1,w
  3445     044F  3A80               	xorlw	128
  3446     0450  00FF               	movwf	127
  3447     0451  3080               	movlw	128
  3448     0452  027F               	subwf	127,w
  3449     0453  1D03               	skipz
  3450     0454  2C57               	goto	u145_25
  3451     0455  30FF               	movlw	255
  3452     0456  0247               	subwf	___fldiv@new_exp,w
  3453     0457                     u145_25:
  3454     0457  1C03               	skipc
  3455     0458  2C67               	goto	i1l1519
  3456     0459  30FF               	movlw	255
  3457     045A  1283               	bcf	3,5	;RP0=0, select bank0
  3458     045B  1303               	bcf	3,6	;RP1=0, select bank0
  3459     045C  00C7               	movwf	___fldiv@new_exp
  3460     045D  3000               	movlw	0
  3461     045E  00C8               	movwf	___fldiv@new_exp+1
  3462     045F  3000               	movlw	0
  3463     0460  00BC               	movwf	___fldiv@b+3
  3464     0461  3000               	movlw	0
  3465     0462  00BB               	movwf	___fldiv@b+2
  3466     0463  3000               	movlw	0
  3467     0464  00BA               	movwf	___fldiv@b+1
  3468     0465  3000               	movlw	0
  3469     0466  00B9               	movwf	___fldiv@b
  3470     0467                     i1l1519:
  3471     0467  1283               	bcf	3,5	;RP0=0, select bank0
  3472     0468  1303               	bcf	3,6	;RP1=0, select bank0
  3473     0469  0848               	movf	___fldiv@new_exp+1,w
  3474     046A  3A80               	xorlw	128
  3475     046B  00FF               	movwf	127
  3476     046C  3080               	movlw	128
  3477     046D  027F               	subwf	127,w
  3478     046E  1D03               	skipz
  3479     046F  2C72               	goto	u146_25
  3480     0470  3001               	movlw	1
  3481     0471  0247               	subwf	___fldiv@new_exp,w
  3482     0472                     u146_25:
  3483     0472  1803               	skipnc
  3484     0473  2C81               	goto	i1l638
  3485     0474  1283               	bcf	3,5	;RP0=0, select bank0
  3486     0475  1303               	bcf	3,6	;RP1=0, select bank0
  3487     0476  01C7               	clrf	___fldiv@new_exp
  3488     0477  01C8               	clrf	___fldiv@new_exp+1
  3489     0478  3000               	movlw	0
  3490     0479  00BC               	movwf	___fldiv@b+3
  3491     047A  3000               	movlw	0
  3492     047B  00BB               	movwf	___fldiv@b+2
  3493     047C  3000               	movlw	0
  3494     047D  00BA               	movwf	___fldiv@b+1
  3495     047E  3000               	movlw	0
  3496     047F  00B9               	movwf	___fldiv@b
  3497     0480  01C6               	clrf	___fldiv@sign
  3498     0481                     i1l638:
  3499     0481  1283               	bcf	3,5	;RP0=0, select bank0
  3500     0482  1303               	bcf	3,6	;RP1=0, select bank0
  3501     0483  0847               	movf	___fldiv@new_exp,w
  3502     0484  00CD               	movwf	___fldiv@bexp
  3503     0485  1C4D               	btfss	___fldiv@bexp,0
  3504     0486  2C89               	goto	i1l1531
  3505     0487  17BB               	bsf	___fldiv@b+2,7
  3506     0488  2C8D               	goto	i1l1533
  3507     0489                     i1l1531:
  3508     0489  307F               	movlw	127
  3509     048A  00FF               	movwf	127
  3510     048B  087F               	movf	127,w
  3511     048C  05BB               	andwf	___fldiv@b+2,f
  3512     048D                     i1l1533:
  3513     048D  084D               	movf	___fldiv@bexp,w
  3514     048E  00BD               	movwf	??___fldiv
  3515     048F  1003               	clrc
  3516     0490  0C3D               	rrf	??___fldiv,w
  3517     0491  00BC               	movwf	___fldiv@b+3
  3518     0492  2B54               	goto	i1l1437
  3519     0493                     __end_of___fldiv:
  3520     007E                     btemp	set	126	;btemp
  3521     007E                     wtemp0	set	126
  3522                           
  3523                           	psect	idloc
  3524                           
  3525                           ;Config register IDLOC0 @ 0x2000
  3526                           ;	unspecified, using default values
  3527     2000                     	org	8192
  3528     2000  3FFF               	dw	16383
  3529                           
  3530                           ;Config register IDLOC1 @ 0x2001
  3531                           ;	unspecified, using default values
  3532     2001                     	org	8193
  3533     2001  3FFF               	dw	16383
  3534                           
  3535                           ;Config register IDLOC2 @ 0x2002
  3536                           ;	unspecified, using default values
  3537     2002                     	org	8194
  3538     2002  3FFF               	dw	16383
  3539                           
  3540                           ;Config register IDLOC3 @ 0x2003
  3541                           ;	unspecified, using default values
  3542     2003                     	org	8195
  3543     2003  3FFF               	dw	16383
  3544                           
  3545                           	psect	config
  3546                           
  3547                           ;Config register CONFIG @ 0x2007
  3548                           ;	Oscillator Selection bits
  3549                           ;	FOSC = HS, HS oscillator
  3550                           ;	Watchdog Timer Enable bit
  3551                           ;	WDTE = OFF, WDT disabled
  3552                           ;	Power-up Timer Enable bit
  3553                           ;	PWRTE = OFF, PWRT disabled
  3554                           ;	Brown-out Reset Enable bit
  3555                           ;	BOREN = ON, BOR enabled
  3556                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3557                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3558                           ;	Data EEPROM Memory Code Protection bit
  3559                           ;	CPD = OFF, Data EEPROM code protection off
  3560                           ;	Flash Program Memory Write Enable bits
  3561                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3562                           ;	In-Circuit Debugger Mode bit
  3563                           ;	DEBUG = 0x1, unprogrammed default
  3564                           ;	Flash Program Memory Code Protection bit
  3565                           ;	CP = OFF, Code protection off
  3566     2007                     	org	8199
  3567     2007  3FFA               	dw	16378

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      75
    BANK1            80      5      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> rcvStr(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    UART_sendString@str	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[18]), rcvStr(BANK1[17]), STR_2(CODE[12]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _Position_Control->___flmul
    i1_UART_sendString->i1_UART_sendChar
    ___fltol->___flmul
    ___flmul->__Umul8_16
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _Command_Handling->_Position_Control
    _Position_Control->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_Speed_Control
    _main->_UART_sendString
    _UART_sendString->_UART_sendChar

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     359
                                              3 BANK1      2     2      0
                        _ExtInt_Init
                      _Speed_Control
                          _UART_Init
                    _UART_sendString
 ---------------------------------------------------------------------------------
 (1) _UART_sendString                                      2     0      2     293
                                              1 BANK1      2     0      2
                      _UART_sendChar
 ---------------------------------------------------------------------------------
 (2) _UART_sendChar                                        1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Speed_Control                                        3     3      0      66
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ExtInt_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0    4809
                                             68 BANK0      6     6      0
                   _Command_Handling
                            _sprintf
                  i1_UART_sendString
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             20    17      3     315
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (4) _Command_Handling                                     1     1      0    4349
                   _Position_Control
 ---------------------------------------------------------------------------------
 (5) _Position_Control                                    11    11      0    4349
                                             57 BANK0     11    11      0
                            ___fldiv
                            ___flmul
                            ___fltol
                  i1_UART_sendString
 ---------------------------------------------------------------------------------
 (4) i1_UART_sendString                                    2     0      2     145
                                              1 COMMON     2     0      2
                    i1_UART_sendChar
 ---------------------------------------------------------------------------------
 (5) i1_UART_sendChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     305
                                             47 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1273
                                             21 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ExtInt_Init
   _Speed_Control
   _UART_Init
   _UART_sendString
     _UART_sendChar

 _ISR (ROOT)
   _Command_Handling
     _Position_Control
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
       ___flmul
       ___fltol
         ___fldiv (ARG)
         ___flmul (ARG)
       i1_UART_sendString
         i1_UART_sendChar
   _sprintf
   i1_UART_sendString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      71       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5      18       7       30.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      71      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jun 17 22:34:12 2023

        ?_Position_Control 0070               ___fldiv@aexp 004E               ___fldiv@bexp 004D  
                        pc 0002               ___fldiv@sign 0046         ??_Position_Control 0059  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l143 07BE  
                      _GIE 005F                        _RB0 0030                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _ISR 0697  
                      _RX9 00C6                        _TX9 04C6                        fsr0 0004  
                      indf 0000               ___flmul@aexp 0029               ___flmul@bexp 002E  
             ___flmul@sign 0028               ___flmul@temp 0033               ___flmul@prod 002F  
                     ?_ISR 0070               ___fltol@exp1 0058                       l1743 073B  
                     l1761 05E2                       l1753 05C2                       l1881 0704  
                     STR_1 0610                       STR_2 0643                       STR_3 0634  
                     STR_4 0622    __end_ofi1_UART_sendChar 07DA                       _BRGH 04C2  
                     _CREN 00C4                       u2107 05AE                       u2117 05BC  
                     u2127 05CE                       u2137 05DC                       u2147 05EE  
                     u2157 05FB                       u2097 06F1                       _PEIE 005E  
                     _INTE 005C                       _INTF 0059                       _RCIE 0465  
                     _RCIF 0065                       i1l67 050A                       i1l93 06AB  
                     i1l86 0732                       i1l95 06A8                       _OERR 00C1  
                     _SPEN 00C7                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _main 06DD                       _mode 00A0  
                     btemp 007E                       start 0012            ___fldiv@new_exp 0047  
            ??_ExtInt_Init 00B3                      ??_ISR 0064              ___fltol@sign1 0057  
                    ?_main 0070            __end_of___fldiv 0493            __end_of___flmul 02FC  
          __end_of___fltol 05A2                      i1l100 06D1                      i1l143 07D5  
                    i1l460 0584                      i1l616 0342                      i1l638 0481  
                    i1l675 0776                      _RCREG 001A                      _SPBRG 0099  
                    _TXREG 0019                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0697            _UART_sendString 073B  
          __initialization 0015               __end_of_main 0710        Command_Handling@com 0070  
                   ??_main 00B6        __end_of_ExtInt_Init 07D4           ?i1_UART_sendChar 0070  
         _Command_Handling 0710                     u110_25 0554                     i1l1501 041A  
                   i1l1413 0316                     i1l1415 031E                     i1l1343 076E  
                   i1l1505 041C                     i1l1433 033A                     i1l1409 0313  
                   i1l1531 0489                     i1l1515 044E                     i1l1443 0361  
                   i1l1363 054B                     i1l1533 048D                     i1l1437 0354  
                   i1l1429 0337                     i1l1701 04A2                     i1l1519 0467  
                   i1l1391 0593                     i1l1383 0580                     i1l1359 0542  
                   i1l1449 036D                     i1l1713 04B8                     i1l1705 04A8  
                   i1l1721 04CD                     i1l1475 03DB                     i1l1555 003A  
                   i1l1379 0570                     i1l1803 0665                     i1l1811 0677  
                   i1l1493 03E6                     i1l1469 03BC                     i1l1477 0398  
                   i1l1645 0279                     i1l1637 0245                     i1l1573 005D  
                   i1l1557 003C                     u113_25 0571                     i1l1717 04C5  
                   i1l1709 04B0                     i1l1813 0652                     i1l1495 0403  
                   i1l1479 03E0                     i1l1663 02C3                     i1l1639 0262  
                   i1l1575 005F                     i1l1559 0044                     i1l1815 0692  
                   i1l1807 066D                     i1l1649 027B                     i1l1585 0075  
                   i1l1577 0067                     i1l1729 0533                     i1l1905 0689  
                   i1l1659 02AD                     u106_25 0777                     i1l1669 02DC  
                   i1l1677 02EF                     i1l1773 0717                     i1l1689 0787  
                   i1l1697 049C                     i1l1785 0729                     i1l1779 0720  
                   i1l1859 06B1                     u131_25 03B5                     u132_25 03CA  
                   u116_25 0589                     _INTEDG 040E                     u135_25 03EA  
                   u144_25 0439                     u128_25 03A1                     u160_25 0119  
                   u216_27 069F                     u145_25 0457                     u137_25 03F5  
                   u129_25 03AA                     u217_27 0519                     u146_25 0472  
                   u170_25 0231                     u218_27 0526                     u171_25 0249  
                   u163_25 016E                     u180_25 0298                     u181_25 02B6  
                   u173_25 0254                     u182_25 02CE                     u167_25 01FA  
                   u191_25 0510      __end_of_Speed_Control 0600                     _TRISB0 0430  
                   _TRISD0 0440                     _TRISD1 0441                     _TRISD2 0442  
        __end_of_UART_Init 07BC                  ??___fldiv 003D                  ??___flmul 0079  
                ??___fltol 0053                     _rcvStr 00A2                     saved_w 007E  
   Position_Control@degree 005F                  ??_sprintf 0073    __end_of_UART_sendString 0764  
        UART_sendChar@data 00B3    __end_of__initialization 001F                 ___fltol@f1 004F  
           __pcstackCOMMON 0070                _ExtInt_Init 07CE        Position_Control@com 0063  
    __end_of_UART_sendChar 07C6                 __pbssBANK0 006A                 __pbssBANK1 00A0  
        Position_Control@i 005D          __end_of__Umul8_16 0787                 __pmaintext 06DD  
               __pintentry 0004                 __stringtab 0600           ?_UART_sendString 00B4  
                  ___fldiv 02FC                    ___flmul 0023                    ___fltol 053B  
 __end_of_Command_Handling 073B                    __ptext1 073B                    __ptext2 07BC  
                  __ptext3 07A8                    __ptext4 05A2                    __ptext5 07CE  
                  __ptext6 0697                    __ptext7 064F                    __ptext8 0710  
                  __ptext9 0493                    _command 006A                    _sprintf 064F  
                  clrloop0 07C7       end_of_initialization 001F       i1UART_sendString@str 0071  
                _UART_Init 07A8                  _TRISCbits 0087           _Position_Control 0493  
              ___fldiv@grs 0049                ___fldiv@rem 0042                ___flmul@grs 002A  
             ?_ExtInt_Init 0070                 ?_UART_Init 0070       Position_Control@step 005B  
      start_initialization 0015                __end_of_ISR 06DD                  __Umul8_16 0764  
      i1UART_sendChar@data 0070           Speed_Control@com 00B5                  ___fldiv@a 0035  
                ___fldiv@b 0039                  ___flmul@a 0024                  ___flmul@b 0020  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00B3  
            _Speed_Control 05A2                   ?___fldiv 0035                   ?___flmul 0020  
                 ?___fltol 004F                 ?__Umul8_16 0070                ??_UART_Init 00B3  
        ??i1_UART_sendChar 0070          ?_Command_Handling 0070                  __pstrings 0600  
       ??_Command_Handling 007E                   ?_sprintf 0070             ?_Speed_Control 0070  
        interrupt_function 0004          i1_UART_sendString 0787                  clear_ram0 07C6  
       ?i1_UART_sendString 0071         UART_sendString@str 00B4   __end_of_Position_Control 053B  
                _speedmode 00A1        ??i1_UART_sendString 0073                __stringbase 060F  
            _UART_sendChar 07BC  __end_ofi1_UART_sendString 07A8                ??__Umul8_16 0072  
       __end_of__stringtab 0610                   __ptext10 0787                   __ptext11 07D4  
                 __ptext12 053B                   __ptext13 0023                   __ptext14 0764  
                 __ptext15 02FC             ?_UART_sendChar 0070            ??_Speed_Control 00B3  
        ??_UART_sendString 00B6                   intlevel1 0000                  sprintf@ap 0075  
                sprintf@sp 0077            i1_UART_sendChar 07D4                  stringcode 060A  
   __Umul8_16@multiplicand 0070                   sprintf@c 0076                   sprintf@f 0070  
                 stringdir 060A                   stringtab 0600            ??_UART_sendChar 00B3  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
